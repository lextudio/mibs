{
  "imports": {
    "class": "imports",
    "SNMPv2-CONF": [
      "NOTIFICATION-GROUP",
      "MODULE-COMPLIANCE",
      "OBJECT-GROUP"
    ],
    "SNMPv2-SMI": [
      "IpAddress",
      "Gauge32",
      "MODULE-IDENTITY",
      "MibIdentifier",
      "Counter64",
      "OBJECT-TYPE",
      "Integer32",
      "iso",
      "NOTIFICATION-TYPE",
      "Bits",
      "TimeTicks",
      "OBJECT-IDENTITY",
      "Unsigned32",
      "Counter32"
    ],
    "SNMPv2-TC": [
      "DisplayString",
      "TEXTUAL-CONVENTION",
      "RowStatus"
    ],
    "WL400-GLOBAL-REG": [
      "wl400Modules",
      "wl400Generic"
    ]
  },
  "snmpGenMIBModule": {
    "name": "snmpGenMIBModule",
    "oid": "1.3.6.1.4.1.232.143.1.3",
    "class": "moduleidentity",
    "lastupdated": "9905260000Z",
    "organization": "Compaq Computer Corporation",
    "contactinfo": " Name: Compaq Computer Corporation Address: 20555 SH 249 Zip: 77070 City: Houston Country: USA Phone: Fax: e-mail: ",
    "description": "The Compaq WL400 SNMP General MIB Module."
  },
  "snmpGenMIB": {
    "name": "snmpGenMIB",
    "oid": "1.3.6.1.4.1.232.144.1",
    "class": "objectidentity"
  },
  "snmpGenConf": {
    "name": "snmpGenConf",
    "oid": "1.3.6.1.4.1.232.144.1.1",
    "class": "objectidentity"
  },
  "snmpGenGroups": {
    "name": "snmpGenGroups",
    "oid": "1.3.6.1.4.1.232.144.1.1.1",
    "class": "objectidentity"
  },
  "snmpGenCompl": {
    "name": "snmpGenCompl",
    "oid": "1.3.6.1.4.1.232.144.1.1.2",
    "class": "objectidentity"
  },
  "snmpGenObjs": {
    "name": "snmpGenObjs",
    "oid": "1.3.6.1.4.1.232.144.1.2",
    "class": "objectidentity"
  },
  "snmpGenReadCommunityString": {
    "name": "snmpGenReadCommunityString",
    "oid": "1.3.6.1.4.1.232.144.1.2.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 64
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The community string to use for SNMP communication with this entity when the SNMP operation is a read operation."
  },
  "snmpGenWriteCommunityString": {
    "name": "snmpGenWriteCommunityString",
    "oid": "1.3.6.1.4.1.232.144.1.2.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 64
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The community string to use for SNMP communication with this entity when the SNMP operation is a SET Request. When read, this object has an undefined value. When written, subsequent SNMP SET operations must use the new community string to be accepted as authentic. When the reset button is pressed on the Access Point, this variable is reset to 'private'. This is also the default manufacturer value. "
  },
  "snmpGenTrapDstMaxTableLength": {
    "name": "snmpGenTrapDstMaxTableLength",
    "oid": "1.3.6.1.4.1.232.144.1.2.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The maximum number of entries in the Trap Destination Table."
  },
  "snmpGenTrapDstTable": {
    "name": "snmpGenTrapDstTable",
    "oid": "1.3.6.1.4.1.232.144.1.2.4",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "The table containing management targets where notifications (SNMP traps) must be sent to. Syslog messages also use this table."
  },
  "snmpGenTrapDstEntry": {
    "name": "snmpGenTrapDstEntry",
    "oid": "1.3.6.1.4.1.232.144.1.2.4.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "WL400-SNMPGEN-MIB",
        "object": "snmpGenTrapDstIndex",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry in the Trap Destination table."
  },
  "snmpGenTrapDstIndex": {
    "name": "snmpGenTrapDstIndex",
    "oid": "1.3.6.1.4.1.232.144.1.2.4.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 256
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "An index into the Trap Destination table."
  },
  "snmpGenTrapDstIpAddress": {
    "name": "snmpGenTrapDstIpAddress",
    "oid": "1.3.6.1.4.1.232.144.1.2.4.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The IP address of a management station to send traps to."
  },
  "snmpGenTrapDstType": {
    "name": "snmpGenTrapDstType",
    "oid": "1.3.6.1.4.1.232.144.1.2.4.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "trapOnly": 1,
          "syslogOnly": 2,
          "trapAndSyslog": 3
        }
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The type indicates what kind of notification is sent. When set to trapOnly(1), only SNMP traps are sent to the IP address. When set to syslogOnly(2), only syslog messages are sent and when set to trapAndSyslog(3), both a trap and a syslog message will be sent."
  },
  "snmpGenTrapDstRowStatus": {
    "name": "snmpGenTrapDstRowStatus",
    "oid": "1.3.6.1.4.1.232.144.1.2.4.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "RowStatus",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The status value for creating and deleting rows in this table."
  },
  "snmpGenLockStatus": {
    "name": "snmpGenLockStatus",
    "oid": "1.3.6.1.4.1.232.144.1.2.5",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "locked": 1,
          "unlocked": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object can be used to lock the SNMP agent. When locked, the agent becomes read-only, i.e. no objects can be written any more. This is useful in a relatively insecure SNMPv1 environment when the network administrator has configured the device and does not intend to change it. This variable can only be set to locked(1). When pressing the reset button on the Access Point, this variable is reset to unlocked(2) and the snmpGenWriteCommunityString is reset to 'private'."
  },
  "snmpGenChangeIPAddress": {
    "name": "snmpGenChangeIPAddress",
    "oid": "1.3.6.1.4.1.232.144.1.2.6",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 18,
            "max": 18
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object is used to change the fixed or 'remembered' IP address of an Access Point. When there is a DHCP/BOOTP server on the network, this variable is not needed. When there is no DHCP/BOOTP server for the IP subnet, the Access Point will try to use the IP address gotten from a previous BOOTP reply (which gives an infinite lease) or an infinite DHCP lease. When there was no previous BOOTP reply, the Access Point can be given an IP address using this variable. Also when the current IP address of the Access Point is invalid for the current IP subnet, this variable can be set by sending an SNMP SET request to the multicast address 224.0.1.43. The MAC address included here ensures that only the right Access Point will accept the SET Request. The IP address given through this variable is considered an infinite lease by the Access Point. The format of this variable is as follows: MAC Address: 6 octets IP Address: 4 octets (network byte order) IP Subnet Mask: 4 octets (network byte order) IP Default Router: 4 octets (network byte order)"
  },
  "snmpGenUseDHCP": {
    "name": "snmpGenUseDHCP",
    "oid": "1.3.6.1.4.1.232.144.1.2.7",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "always": 1,
          "smart": 2,
          "never": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object controls DHCP operation. When set to always(1), the Access Point will not assume an infinite lease it was given but continue trying to obtain an IP address using DHCP. The Access Point can only see the difference between an infinite lease and a finite lease because there is no clock running when the device is shut down. When set to smart(2), the Access Point will use DHCP when it does not have an infinite lease. When it does have an infinite lease, it quickly tries to contact a DHCP server (because it may now be in a new IP subnet) using one DHCPREQUEST and one DHCPDISCOVER. If no replies are received, it will automatically assume its given (infinite) address within a few seconds after reboot. When set to never(3), the Access Point will not use DHCP if it has an infinite address. It will immediately assume that address after a reboot. Note that the Access Point requires a valid (not NULL) IP address for this object to be set to never(3)."
  },
  "snmpGenBasicGroup": {
    "name": "snmpGenBasicGroup",
    "oid": "1.3.6.1.4.1.232.144.1.1.1.1",
    "class": "objectgroup",
    "objects": [
      {
        "module": "WL400-SNMPGEN-MIB",
        "object": "snmpGenReadCommunityString"
      },
      {
        "module": "WL400-SNMPGEN-MIB",
        "object": "snmpGenWriteCommunityString"
      },
      {
        "module": "WL400-SNMPGEN-MIB",
        "object": "snmpGenTrapDstMaxTableLength"
      },
      {
        "module": "WL400-SNMPGEN-MIB",
        "object": "snmpGenTrapDstIpAddress"
      },
      {
        "module": "WL400-SNMPGEN-MIB",
        "object": "snmpGenTrapDstType"
      },
      {
        "module": "WL400-SNMPGEN-MIB",
        "object": "snmpGenTrapDstRowStatus"
      },
      {
        "module": "WL400-SNMPGEN-MIB",
        "object": "snmpGenLockStatus"
      },
      {
        "module": "WL400-SNMPGEN-MIB",
        "object": "snmpGenChangeIPAddress"
      },
      {
        "module": "WL400-SNMPGEN-MIB",
        "object": "snmpGenUseDHCP"
      }
    ],
    "status": "current",
    "description": "The snmp general group."
  },
  "snmpGenBasicCompl": {
    "name": "snmpGenBasicCompl",
    "oid": "1.3.6.1.4.1.232.144.1.1.2.1",
    "class": "modulecompliance",
    "modulecompliance": [
      {
        "object": "snmpGenBasicGroup",
        "module": "WL400-SNMPGEN-MIB"
      }
    ],
    "status": "current",
    "description": "The implementation requirements for an IEEE 802.11 Station."
  },
  "meta": {
    "comments": [
      "ASN.1 source file:///Users/neermitt/kusanagi/mibs.snmplabs.com/asn1/WL400-SNMPGEN-MIB",
      "Produced by pysmi-0.3.4 at Fri May 24 22:30:08 2019",
      "On host NEERMITT-M-J0NV platform Darwin version 18.6.0 by user neermitt",
      "Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) "
    ],
    "module": "WL400-SNMPGEN-MIB"
  }
}