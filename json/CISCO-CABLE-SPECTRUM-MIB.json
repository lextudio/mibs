{
  "imports": {
    "class": "imports",
    "CISCO-SMI": [
      "ciscoMgmt"
    ],
    "IF-MIB": [
      "InterfaceIndexOrZero",
      "InterfaceIndex",
      "ifIndex"
    ],
    "SNMPv2-CONF": [
      "OBJECT-GROUP",
      "MODULE-COMPLIANCE",
      "NOTIFICATION-GROUP"
    ],
    "SNMPv2-SMI": [
      "Integer32",
      "OBJECT-TYPE",
      "Bits",
      "MODULE-IDENTITY",
      "Counter64",
      "OBJECT-IDENTITY",
      "NOTIFICATION-TYPE",
      "iso",
      "TimeTicks",
      "IpAddress",
      "Counter32",
      "Gauge32",
      "MibIdentifier",
      "Unsigned32"
    ],
    "SNMPv2-TC": [
      "TruthValue",
      "DisplayString",
      "TimeStamp",
      "RowStatus",
      "MacAddress",
      "TEXTUAL-CONVENTION",
      "StorageType",
      "DateAndTime"
    ]
  },
  "ciscoCableSpectrumMIB": {
    "name": "ciscoCableSpectrumMIB",
    "oid": "1.3.6.1.4.1.9.9.114",
    "class": "moduleidentity",
    "revisions": [
      {
        "revision": "2011-04-08 00:00",
        "description": "1. Changed Range Of Ccsfrequency And Ccsmeasuredfrequency Textual-Convention To Support The Docsis 3.0 Extended Upstream Frequency Range."
      },
      {
        "revision": "2006-10-10 00:00",
        "description": "1. Added spectrum group global configuration table as ccsSpecGroupFreqTable. 2. Added ccsUpInSpecGroupTable and ccsUpInFiberNodeTable to populate all cable upstream interfaces in each spectrum group and fiber-node. 3. Added ccsUpSpecMgmtSpecGroup and ccsUpSpecMgmtSharedSpectrum into ccsUpSpecMgmtTable to populate spectrum group configuration and topology information for each upstream. 4. Included 0 as part of ccsUpSpecMgmtHopPeriod. 5. Changed the SYNTAX of ccsUpSpecMgmtFromCenterFreq and ccsUpSpecMgmtToCenterFreq from CCSFrequency to Unsigned32 (0 | 5000..65000). 6. Changed the SYNTAX of ccsUpSpecMgmtFromBandWidth and ccsUpSpecMgmtToBandWidth from CCSFrequency to Unsigned32 (200 | 400 | 800 | 1600 | 3200 | 6400). 7. Increased ccsUpSpecMgmtFecUnCorrectThres2 range to 30. Included 0 as part of it. 8. Updated the description for ccsUpSpecMgmtHopPeriod, ccsUpSpecMgmtMissedMaintMsgThres, ccsUpSpecMgmtFromCenterFreq, ccsUpSpecMgmtToCenterFreq, and ccsUpSpecMgmtFecUnCorrectThres2."
      },
      {
        "revision": "2004-09-05 00:00",
        "description": "1. Included 0 as part of ccsUpSpecMgmtSnrThres, ccsUpSpecMgmtCnrThres, ccsUpSpecMgmtFecCorrectThres, ccsUpSpecMgmtFecUnCorrectThres ranges. 2. Increased ccsUpSpecMgmtFecCorrectThres and ccsUpSpecMgmtFecUnCorrectThres range to 30"
      },
      {
        "revision": "2004-07-14 00:00",
        "description": "1. Modified ccsUpSpecMgmtSNR's description to reflect its name since there's a new object defined for CNR. 2. Added ccsUpSpecMgmtCnrThres1, ccsUpSpecMgmtCnrThres1, ccsUpSpecMgmtCNR, ccsUpSpecMgmtMissedMaintMsgThres, ccsUpSpecMgmtHopPeriod, ccsUpSpecMgmtCriteria. 3. Deprecated ccsUpSpecMgmtFecCorrectThres2 4. Deprecated ccsUpSpecMgmtHopCondition and replaced it with ccsUpSpecMgmtCriteria. 5. Deprecated ccsHoppingNotification and replaced it with ccsSpecMgmtNotification."
      },
      {
        "revision": "2004-03-02 00:00",
        "description": "1. Modified description for ccsFlapListMaxSize and ccsFlapListCurrentSize. 2. Implement ccsCmFlapTable using downstream, upstream and Mac as indices to replace ccsFlapTable. 3. Modified description for ccsSNRRequestTable. 4. Added ccsUpSpecMgmtUpperBoundFreq. 5. Added ccsCompliance5."
      },
      {
        "revision": "2003-06-18 00:00",
        "description": "1. Changed range of CCSFrequency and CCSMeasuredFrequency TEXTUAL-CONVENTION to support Euro-DOCSIS and J-DOCSIS."
      },
      {
        "revision": "2002-06-10 00:00",
        "description": "1. Changed range for ccsUpSpecMgmtFecCorrectThres1, ccsUpSpecMgmtFecCorrectThres2, ccsUpSpecMgmtFecUnCorrectThres1, ccsUpSpecMgmtFecUnCorrectThres2 and ccsUpSpecMgmtSnrThres2. 2. Changed modemOffline(1) enumeration to stationMaintainenceMiss. 3. Added ccsUpSpecMgmtGroupRev1 to ccsCompliance4."
      },
      {
        "revision": "2001-02-01 00:00",
        "description": "1. Added new objects ccsFlapMissThreshold, ccsFlapPowerAdjustThreshold, ccsFlapResetAll, ccsFlapClearAll and ccsFlapLastClearTime. 2. Added new objects ccsFlapInsertionFailNum, ccsFlapHitNum, ccsFlapMissNum, ccsFlapCrcErrorNum, ccsFlapPowerAdjustmentNum, ccsFlapTotalNum, ccsFlapResetNow, ccsFlapLastResetTime into ccsFlapTable."
      },
      {
        "revision": "2000-08-18 00:00",
        "description": "1. Removed ccsSNRRequestUpperFreq and ccsSNRRequestLowFreq from ccsSNRRequestTable. 2. Changed ccsSNRRequestSNR from Unsigned32 to Integer32. 3. Modified description for ccsHoppingNotification. 4. Changed ccsSpectrumRequestResolution to Khz."
      },
      {
        "revision": "2000-04-24 00:00",
        "description": "Added new object groups: 1. ccsSpectrumObjects to provide spectrum information 2. ccsConfigObjects to support spectrum management functions."
      }
    ],
    "lastupdated": "201104080000Z",
    "organization": "Cisco Systems, Inc.",
    "contactinfo": "Cisco Systems Customer Service Postal: cisco Systems 170 West Tasman Drive San Jose, CA 95134 U.S.A. Tel: +1 800 553-NETS E-mail: cs-ubr@cisco.com",
    "description": "This is the MIB Module for Cable Spectrum Management for DOCSIS-compliant Cable Modem Termination Systems (CMTS). Spectrum management is a software/hardware feature provided in the CMTS so that the CMTS may sense both downstream and upstream plant impairments, report them to a management entity, and automatically mitigate them where possible. The CMTS directly senses upstream transmission errors.It may also indirectly monitor the condition of the plant by keeping a record of modem state changes. It is desireable to perform these functions without reducing throughput or latency and without creating additional packet overhead on the RF plant. The purpose of cable Spectrum Management is to prevent long term service interruptions caused by upstream noise events in the cable plant. It is also used for fault management and trouble shooting the cable network. When modems are detected to go on-line and off-line by flap detectors, the cable operators can look at the flap list and spectrum tables to determine the possible causes."
  },
  "CCSFrequency": {
    "name": "CCSFrequency",
    "class": "textualconvention",
    "type": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 5000,
            "max": 85000
          }
        ]
      }
    },
    "status": "current",
    "description": "This data type represents the frequency. The unit is in KHz. A range of 5000KHz to 42000KHz is appropriate for a cable plant using a North American Sub-Split channel plan. The spectrum range has been expanded to accommodate an upper edge of 65000KHz for some European channel plans. The spectrum range has been further expanded with DOCSIS 3.0 to an upper edge of 85000KHz.If DOCSIS is extended to cover other types of channel plans (and frequency allocations) this object will be modified accordingly."
  },
  "CCSMeasuredFrequency": {
    "name": "CCSMeasuredFrequency",
    "class": "textualconvention",
    "type": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 4000,
            "max": 85000
          }
        ]
      }
    },
    "status": "current",
    "description": "This data type represents the actual measured frequency. The unit is in KHz."
  },
  "CCSRequestOperation": {
    "name": "CCSRequestOperation",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "none": 0,
          "start": 1,
          "abort": 2
        }
      }
    },
    "status": "current",
    "description": "The CCSRequestOperation is used to control various spectrum tests. It has the following defined values: - 'none', initial value at row creation and also indicates test completion; - 'start', which is used to start the test; - 'abort', which is used to abort the test;"
  },
  "CCSRequestOperState": {
    "name": "CCSRequestOperState",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "idle": 0,
          "pending": 1,
          "running": 2,
          "noError": 3,
          "aborted": 4,
          "notOnLine": 5,
          "invalidMac": 6,
          "timeOut": 7,
          "fftBusy": 8,
          "fftFailed": 9,
          "others": 10
        }
      }
    },
    "status": "current",
    "description": "The CCSRequestOperState is used to represent the current test status. It has the following defined values: - 'idle', which indicates the test has not been initiated; - 'pending', which indicates the test is in the pending queue; - 'running', which indicates the test is in process; - 'noError', which indicates the test has completed without error; - 'aborted', which indicates the test was stopped before the test was completed; - 'notOnLine', which indicates the Mac Address is not online; - 'invalidMac', which indicates the Mac Address is not valid; - 'timeOut', which indicates timeout has occurred while receiving data from DSP; - 'fftBusy', which indicates the FFT is busy; - 'fftFailed', which indicates the FFT is failed due to a hardware problem; - 'others', other errors;"
  },
  "ciscoCableSpectrumMIBObjects": {
    "name": "ciscoCableSpectrumMIBObjects",
    "oid": "1.3.6.1.4.1.9.9.114.1",
    "class": "objectidentity"
  },
  "ccsFlapObjects": {
    "name": "ccsFlapObjects",
    "oid": "1.3.6.1.4.1.9.9.114.1.1",
    "class": "objectidentity"
  },
  "ccsSpectrumObjects": {
    "name": "ccsSpectrumObjects",
    "oid": "1.3.6.1.4.1.9.9.114.1.2",
    "class": "objectidentity"
  },
  "ccsConfigObjects": {
    "name": "ccsConfigObjects",
    "oid": "1.3.6.1.4.1.9.9.114.1.3",
    "class": "objectidentity"
  },
  "ccsFlapListMaxSize": {
    "name": "ccsFlapListMaxSize",
    "oid": "1.3.6.1.4.1.9.9.114.1.1.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 65536
          }
        ]
      }
    },
    "default": {
      "default": {
        "value": 100,
        "format": "decimal"
      }
    },
    "units": "modems",
    "maxaccess": "read-write",
    "status": "current",
    "description": "The maximum number of flapped modem entries (ccsCmFlapEntry) per Cable downstream interface that can be reported in the ccsCmFlapTable. If the Cable downstream interface has more flapped modems than the ccsFlapListMaxSize, some of the flapped modems will not be shown in the ccsCmFlapTable. In this case, the users may want to increase the ccsFlapMaxSize."
  },
  "ccsFlapListCurrentSize": {
    "name": "ccsFlapListCurrentSize",
    "oid": "1.3.6.1.4.1.9.9.114.1.1.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Gauge32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 65536
          }
        ]
      }
    },
    "units": "modems",
    "maxaccess": "read-only",
    "status": "current",
    "description": "The total number of flapped modem entries (ccsCmFlapEntry) that reported in the ccsCmFlapTable. The maximum value will be ccsFlapListMaxSize * <no of downstreams>."
  },
  "ccsFlapAging": {
    "name": "ccsFlapAging",
    "oid": "1.3.6.1.4.1.9.9.114.1.1.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 86400
          }
        ]
      }
    },
    "default": {
      "default": {
        "value": 10080,
        "format": "decimal"
      }
    },
    "units": "minutes",
    "maxaccess": "read-write",
    "status": "current",
    "description": "The flap entry aging threshold. Periodically, the aging process scans through the flap list and removes the cable modems that have not flapped for that many minutes."
  },
  "ccsFlapInsertionTime": {
    "name": "ccsFlapInsertionTime",
    "oid": "1.3.6.1.4.1.9.9.114.1.1.4",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 60,
            "max": 86400
          }
        ]
      }
    },
    "default": {
      "default": {
        "value": 90,
        "format": "decimal"
      }
    },
    "units": "seconds",
    "maxaccess": "read-write",
    "status": "current",
    "description": "The insertion-time is an empirically derived, worst-case number of seconds which the cable modem requires to complete registration. The time taken by cable modems to complete their registration is measured by the cable operators and this information helps to determine the insertion time. If the cable modem has not completed the registration stage within this insertion-time setting, the cable modem will be inserted into the flap-list."
  },
  "ccsFlapTable": {
    "name": "ccsFlapTable",
    "oid": "1.3.6.1.4.1.9.9.114.1.1.5",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "deprecated",
    "description": "This table keeps the records of modem state changes. It can be used to identify the problematic cable modems. An entry can be deleted from the table but can not be added to the table."
  },
  "ccsFlapEntry": {
    "name": "ccsFlapEntry",
    "oid": "1.3.6.1.4.1.9.9.114.1.1.5.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsFlapMacAddr",
        "implied": 0
      }
    ],
    "status": "deprecated",
    "description": "List of attributes for an entry in the ccsFlapTable. An entry in this table exists for each cable modem that triggered one of our flap detectors."
  },
  "ccsFlapMacAddr": {
    "name": "ccsFlapMacAddr",
    "oid": "1.3.6.1.4.1.9.9.114.1.1.5.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "MacAddress",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "deprecated",
    "description": "MAC address of the Cable Modem's Cable interface which identifies a flap-list entry for a flapping Cable Modem."
  },
  "ccsFlapUpstreamIfIndex": {
    "name": "ccsFlapUpstreamIfIndex",
    "oid": "1.3.6.1.4.1.9.9.114.1.1.5.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InterfaceIndex",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "deprecated",
    "description": "The ifIndex of the Cable upstream interface whose ifType is docsCableUpstream(129). The CMTS detects a flapping Cable Modem from its Cable upstream interface."
  },
  "ccsFlapDownstreamIfIndex": {
    "name": "ccsFlapDownstreamIfIndex",
    "oid": "1.3.6.1.4.1.9.9.114.1.1.5.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InterfaceIndex",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "deprecated",
    "description": "The ifIndex of the Cable downstream interface whose ifType is docsCableDownstream(128)."
  },
  "ccsFlapInsertionFails": {
    "name": "ccsFlapInsertionFails",
    "oid": "1.3.6.1.4.1.9.9.114.1.1.5.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "Data over Cable Radio Frequency Interface specification, Section 7.2.",
    "status": "deprecated",
    "description": "The number of times a Cable Modem registered more frequently than expected. Excessive registration is defined as the presence of a time span between two successive registration cycles which is less than a threshold span (ccsFlapInsertionTime). A Cable Modem may fail the ranging or registration process due to not being able to get an IP address. When the Cable Modem can not finish registration within the insertion time, it retries the process and sends the Initial Maintenance packet again. CMTS will receive the Initial Maintenance packet from the Cable Modem sooner than expected and the Cable Modem is considered a flapping modem. This count may indicate: Intermittent downstream sync loss, or DHCP or modem registration problems. The Flap Count (ccsFlapTotal) will be incremented when this counter is incremented. Discontinuites in the value of this counter can occur if this entry is removed from the table and then re-added, and are indicated by a change in the value of ccsFlapCreateTime."
  },
  "ccsFlapHits": {
    "name": "ccsFlapHits",
    "oid": "1.3.6.1.4.1.9.9.114.1.1.5.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "deprecated",
    "description": "The number of times the CMTS receives the Ranging request from the Cable Modem. The CMTS issues a Station Maintenance transmit opportunity at a typical rate of once every 10 seconds and waits for a Ranging request from the Cable Modem.If the CMTS receives a Ranging request then the Hit count will be increased by 1 If the FlapTotal count is high,both Hits and Misses counts are high, and other counters are relatively low then the flapping is probably caused by the modem going up and down. The Hits and Misses counts are keep-alive polling statistics. The Hits count should be much greater than the Misses count Discontinuites in the value of this counter can occur if this entry is removed from the table and then re-added, and are indicated by a change in the value of ccsFlapCreateTime."
  },
  "ccsFlapMisses": {
    "name": "ccsFlapMisses",
    "oid": "1.3.6.1.4.1.9.9.114.1.1.5.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "deprecated",
    "description": "The number of times the CMTS misses the Ranging request from the Cable Modem. The CMTS issues a Station Maintenance packet every 10 seconds and waits for a Ranging request from the Cable Modem. If the CMTS misses a Ranging request within 25 msec then the Misses count will be incremented. If ccsFlapTotal is high, Hits and Misses are high but ccsFlapPowerAdjustments and ccsFlapInsertionFails are low then the flapping is probably caused by the modem going up and down. Miss counts can indicate: Intermittent upstream, Laser clipping, or Noise bursts. Laser clipping can happen if the signal power is too high when the upstream electrical signal is converted to an optical signal. When it happens the more input produces less output, until finally there is no more increase in output. This phenomena is called laser clipping. Discontinuites in the value of this counter can occur if this entry is removed from the table and then re-added, and are indicated by a change in the value of ccsFlapCreateTime."
  },
  "ccsFlapCrcErrors": {
    "name": "ccsFlapCrcErrors",
    "oid": "1.3.6.1.4.1.9.9.114.1.1.5.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "deprecated",
    "description": "The number of times the CMTS upstream receiver flagged a packet with a CRC error. If ccsFlapCrcErrors is high, it indicates the cable upstream may have high noise level. The modem may not be flapping yet but it may be a potential problem. This count can indicate: Intermittent upstream, Laser clipping, or Noise bursts. Laser clipping can happen if the signal power is too high when the upstream electrical signal is converted to an optical signal. When it happens the more input produces less output, until finally there is no more increase in output. This phenomena is called laser clipping. Discontinuites in the value of this counter can occur if this entry is removed from the table and then re-added, and are indicated by a change in the value of ccsFlapCreateTime."
  },
  "ccsFlapPowerAdjustments": {
    "name": "ccsFlapPowerAdjustments",
    "oid": "1.3.6.1.4.1.9.9.114.1.1.5.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "Data over Cable Radio Frequency Interface specification, Section 7.2.",
    "status": "deprecated",
    "description": "The number of times the Cable Modem upstream transmit power is adjusted during station maintenance. When the adjustment is greater than the power adjustment threshold the counter will be incremented. The power adjustment threshold is chosen in an implementation-dependent manner. The Flap Count (ccsFlapTotal) will be incremented when this counter is incremented. If ccsFlapTotal is high, ccsFlapPowerAdjustments is high but the Hits and Misses are low and ccsFlapInsertionFails are low then the flapping is probably caused by an improper transmit power level setting at the modem end. This count can indicate: Amplifier degradation, Poor connections, or Wind, moisture, or temperature sensitivity. Discontinuites in the value of this counter can occur if this entry is removed from the table and then re-added, and are indicated by a change in the value of ccsFlapCreateTime."
  },
  "ccsFlapTotal": {
    "name": "ccsFlapTotal",
    "oid": "1.3.6.1.4.1.9.9.114.1.1.5.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "Data over Cable Radio Frequency Interface specification, Appendix B.",
    "status": "deprecated",
    "description": "Whenever the Cable Modem passes flap detection, then the flap counter is increased. There are 3 flap detectors defined: (1) When ccsFlapInsertionFails is increased the Flap count will be increased. (2) When the CMTS receives a Miss followed by a Hit then the Flap count will be increased. (3) When ccsFlapPowerAdjustments is increased the Flap count will be increased. Discontinuites in the value of this counter can occur if this entry is removed from the table and then re-added, and are indicated by a change in the value of ccsFlapCreateTime."
  },
  "ccsFlapLastFlapTime": {
    "name": "ccsFlapLastFlapTime",
    "oid": "1.3.6.1.4.1.9.9.114.1.1.5.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DateAndTime",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "deprecated",
    "description": "The flap time is set whenever the Cable Modem triggers a flap detector."
  },
  "ccsFlapCreateTime": {
    "name": "ccsFlapCreateTime",
    "oid": "1.3.6.1.4.1.9.9.114.1.1.5.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DateAndTime",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "deprecated",
    "description": "The time that this entry was added to the table. If an entry is removed and then later re-added, there may be a discontinuity in the counters associated with this entry. This timestamp can be used to detect those discontinuities."
  },
  "ccsFlapRowStatus": {
    "name": "ccsFlapRowStatus",
    "oid": "1.3.6.1.4.1.9.9.114.1.1.5.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "RowStatus",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "deprecated",
    "description": "Controls and reflects the status of rows in this table. When a cable modem triggers a flap detector, if an entry does not already exist for this cable modem, and ccsFlapListCurrentSize is less than ccsFlapListMaxSize, then an entry will be created in this table. The new instance of this object will be set to active(1). All flapping modems have the status of active(1). Active entries are removed from the table after they have not triggered any additional flap detectors for the period of time defined in ccsFlapAging. Alternatively, setting this instance to destroy(6) will remove the entry immediately. createAndGo(4) and createAndWait(5) are not supported."
  },
  "ccsFlapInsertionFailNum": {
    "name": "ccsFlapInsertionFailNum",
    "oid": "1.3.6.1.4.1.9.9.114.1.1.5.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "deprecated",
    "description": "The number of times a Cable Modem registered more frequently than expected. Excessive registration is defined as the presence of a time span between two successive registration cycles which is less than a threshold span (ccsFlapInsertionTime). A Cable Modem may fail the ranging or registration process due to not being able to get an IP address. When the Cable Modem can not finish registration within the insertion time, it retries the process and sends the Initial Maintenance packet again. CMTS will receive the Initial Maintenance packet from the Cable Modem sooner than expected and the Cable Modem is considered a flapping modem. This object may indicate: Intermittent downstream sync loss, or DHCP or modem registration problems. The Flap number (ccsFlapTotalNum) will be incremented when this object is incremented. This object is going to replace the object ccsFlapInsertionFails and the value of this object can be reset to zero if this entry is removed from the table and then re-added, or if a user resets all the statistical objects for this entry. The value of the object ccsFlapLastResetTime indicates the last reset time."
  },
  "ccsFlapHitNum": {
    "name": "ccsFlapHitNum",
    "oid": "1.3.6.1.4.1.9.9.114.1.1.5.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "deprecated",
    "description": "The number of times the CMTS receives the Ranging request from the Cable Modem. The CMTS issues a Station Maintenance transmit opportunity at a typical rate of once every 10 seconds and waits for a Ranging request from the Cable Modem. If the CMTS receives a Ranging request then the Hit number will be increased by 1 If the FlapTotal object is high, both Hit and Miss objects are high, and other statistical objects are relatively low then the flapping is probably caused by the modem going up and down. The Hit and Miss objects keep-alive polling statistics. The Hit object should be much greater than the Misses count. This object is going to replace the object ccsFlapHits and the value of this object can be reset to zero if this entry is removed from the table and then re-added, or if an user resets all the statistical objects for this entry. The value of the object ccsFlapLastResetTime indicates the last reset time."
  },
  "ccsFlapMissNum": {
    "name": "ccsFlapMissNum",
    "oid": "1.3.6.1.4.1.9.9.114.1.1.5.1.15",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "deprecated",
    "description": "The number of times the CMTS misses the Ranging request from the Cable Modem. The CMTS issues a Station Maintenance packet every 10 seconds and waits for a Ranging request from the Cable Modem. If the CMTS misses a Ranging request within 25 msec then the Miss Object will be incremented. If ccsFlapTotalNum is high, Hit and Miss are high but ccsFlapPowerAdjustmentNum and ccsFlapInsertionFailNum are low then the flapping is probably caused by the modem going up and down. Miss object can indicate: Intermittent upstream, Laser clipping, or Noise bursts. Laser clipping can happen if the signal power is too high when the upstream electrical signal is converted to an optical signal. When it happens the more input produces less output, until finally there is no more increase in output. This phenomena is called laser clipping. This object is going to replace the object ccsFlapMisses and the value of this object can be reset to zero if this entry is removed from the table and then re-added, or if an user resets all the statistical objects for this entry. The value of the object ccsFlapLastResetTime indicates the last reset time."
  },
  "ccsFlapCrcErrorNum": {
    "name": "ccsFlapCrcErrorNum",
    "oid": "1.3.6.1.4.1.9.9.114.1.1.5.1.16",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "deprecated",
    "description": "The number of times the CMTS upstream receiver flagged a packet with a CRC error. If ccsFlapCrcErrorNum is high, it indicates the cable upstream may have high noise level. The modem may not be flapping yet but it may be a potential problem. This object can indicate: Intermittent upstream, Laser clipping, or Noise bursts. Laser clipping can happen if the signal power is too high when the upstream electrical signal is converted to an optical signal. When it happens the more input produces less output, until finally there is no more increase in output. This phenomena is called laser clipping. This object is going to replace the object ccsFlapCrcErrors and the value of this object can be reset to zero if this entry is removed from the table and then re-added, or if a user resets all the statistical objects for this entry. The value of the object ccsFlapLastResetTime indicates the last reset time."
  },
  "ccsFlapPowerAdjustmentNum": {
    "name": "ccsFlapPowerAdjustmentNum",
    "oid": "1.3.6.1.4.1.9.9.114.1.1.5.1.17",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "deprecated",
    "description": "The number of times the Cable Modem upstream transmit power is adjusted during station maintenance. When the adjustment is greater than the power adjustment threshold the number will be incremented. The power adjustment threshold is chosen in an implementation-dependent manner The Flap number (ccsFlapTotalNum) will be incremented when this object is incremented. If ccsFlapTotalNum is high, ccsFlapPowerAdjustmentNum is high but the Hit and Miss are low and ccsFlapInsertionFailNum are low then the flapping is probably caused by an improper transmit power level setting at the modem end. This object can indicate: Amplifier degradation, Poor connections, or Wind, moisture, or temperature sensitivity. This object is going to replace the object ccsFlapPowerAdjustments and the value of this object can be reset to zero if this entry is removed from the table and then re-added, or if a user resets all the statistical objects for this entry. The value of the object ccsFlapLastResetTime indicates the last reset time."
  },
  "ccsFlapTotalNum": {
    "name": "ccsFlapTotalNum",
    "oid": "1.3.6.1.4.1.9.9.114.1.1.5.1.18",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "deprecated",
    "description": "Whenever the Cable Modem passes flap detection, then the flap number is increased. There are 3 flap detectors defined: (1) When ccsFlapInsertionFailNum is increased the Flap number will be increased. (2) When the CMTS receives a Miss followed by a Hit then the Flap number will be increased. (3) When ccsFlapPowerAdjustmentNum is increased the Flap number will be increased. This object is going to replace the object ccsFlapTotal and the value of this object can be reset to zero if this entry is removed from the table and then re-added, or if an user resets all the statistical objects for this entry. The value of the object ccsFlapLastResetTime indicates the last reset time."
  },
  "ccsFlapResetNow": {
    "name": "ccsFlapResetNow",
    "oid": "1.3.6.1.4.1.9.9.114.1.1.5.1.19",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "deprecated",
    "description": "Setting this object to true(1) will set the following objects of this entry to 0: ccsFlapInsertionFailsNum, ccsFlapHitsNum, ccsFlapMissesNum, ccsFlapCrcErrorsNum, ccsFlapPowerAdjustmentsNum and ccsFlapTotalNum. Setting this object to true does not destroy the entry, so the ccsFlapCreateTime will be unchanged. Reading this object always returns false(2)."
  },
  "ccsFlapLastResetTime": {
    "name": "ccsFlapLastResetTime",
    "oid": "1.3.6.1.4.1.9.9.114.1.1.5.1.20",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DateAndTime",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "deprecated",
    "description": "The last time that all the statistical objects of this entry are started from zero. There are several ways to restart the the statistical objects from zero. Setting the object ccsFlapResetNow or ccsFlapResetAll to true via SNMP is one way and and the other way is via command Line Interface. This timestamp can be used to know the last time the statistical objects are started from zero. The special value of all '00'Hs indicates that these statistical objects of this entry in the ccsFlapTable have never been reset."
  },
  "ccsFlapPowerAdjustThreshold": {
    "name": "ccsFlapPowerAdjustThreshold",
    "oid": "1.3.6.1.4.1.9.9.114.1.1.6",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 10
          }
        ]
      }
    },
    "default": {
      "default": {
        "value": 1,
        "format": "decimal"
      }
    },
    "units": "db",
    "maxaccess": "read-write",
    "status": "deprecated",
    "description": "The power adjust threshold. When the power of the modem is adjusted beyond this threshold, the modem will be inserted into the flap-list."
  },
  "ccsFlapMissThreshold": {
    "name": "ccsFlapMissThreshold",
    "oid": "1.3.6.1.4.1.9.9.114.1.1.7",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 12
          }
        ]
      }
    },
    "default": {
      "default": {
        "value": 6,
        "format": "decimal"
      }
    },
    "maxaccess": "read-write",
    "status": "deprecated",
    "description": "Per modem miss threshold which triggers polling flap detector. When the number of times a cable modem does not acknowledge a MAC-layer keepalive message from a cable modem card exceeds the miss threshold, the cable modem is placed in the flap list."
  },
  "ccsFlapResetAll": {
    "name": "ccsFlapResetAll",
    "oid": "1.3.6.1.4.1.9.9.114.1.1.8",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "deprecated",
    "description": "Setting this object to true(1) causes ccsFlapInsertionFailNum, ccsFlapHitNum, ccsFlapMissNum, ccsFlapCrcErrorNum, ccsFlapPowerAdjustmentNum and ccsFlapTotalNum objects of each entry in ccsFlapTable to be started from zero. Reading this object always returns false(2)."
  },
  "ccsFlapClearAll": {
    "name": "ccsFlapClearAll",
    "oid": "1.3.6.1.4.1.9.9.114.1.1.9",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "deprecated",
    "description": "Setting this object to true(1) removes all cable modems from flap-list and all the entries in the ccsFlapTable are destroyed. If a modem keeps flapping, the modem will be added again into the flap list and a new entry in the ccsFlapTable will be created. The newly created entry for that modem will have new value of ccsFlapCreateTime and all the statistical objects will be started from zero. Reading this object always returns false(2)."
  },
  "ccsFlapLastClearTime": {
    "name": "ccsFlapLastClearTime",
    "oid": "1.3.6.1.4.1.9.9.114.1.1.10",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DateAndTime",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "deprecated",
    "description": "The last time that all the entries in the ccsFlapTable are destroyed. There are several ways to destroy all the entries in the ccsFlapTable. Setting the object ccsFlapClearAll to true is one way, and the other way is through Command Line Interface. This timestamp can be used to know when all the entries in the ccsFlapTable are destroyed. The special value of all '00'Hs indicates that the entries in the ccsFlapTable have never been destroyed."
  },
  "ccsCmFlapTable": {
    "name": "ccsCmFlapTable",
    "oid": "1.3.6.1.4.1.9.9.114.1.1.11",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This table keeps the records of modem state changes, so it can be used to identify the problematic cable modems. An entry per modem is added to the table automatically by the system when it detects any state changes to the modem. Therefore, it can be deleted but can not be added by the management system."
  },
  "ccsCmFlapEntry": {
    "name": "ccsCmFlapEntry",
    "oid": "1.3.6.1.4.1.9.9.114.1.1.11.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsCmFlapDownstreamIfIndex",
        "implied": 0
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsCmFlapUpstreamIfIndex",
        "implied": 0
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsCmFlapMacAddr",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "List of attributes for an entry in the ccsCmFlapTable. An entry in this table exists for each cable modem that triggered one of our flap detectors."
  },
  "ccsCmFlapDownstreamIfIndex": {
    "name": "ccsCmFlapDownstreamIfIndex",
    "oid": "1.3.6.1.4.1.9.9.114.1.1.11.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InterfaceIndex",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "The ifIndex of the Cable downstream interface whose ifType is docsCableDownstream(128)."
  },
  "ccsCmFlapUpstreamIfIndex": {
    "name": "ccsCmFlapUpstreamIfIndex",
    "oid": "1.3.6.1.4.1.9.9.114.1.1.11.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InterfaceIndex",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "The ifIndex of the Cable upstream interface whose ifType is docsCableUpstream(129). The CMTS detects a flapping Cable Modem from its Cable upstream interface."
  },
  "ccsCmFlapMacAddr": {
    "name": "ccsCmFlapMacAddr",
    "oid": "1.3.6.1.4.1.9.9.114.1.1.11.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "MacAddress",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "MAC address of the Cable Modem's Cable interface which identifies a flapping Cable Modem."
  },
  "ccsCmFlapLastFlapTime": {
    "name": "ccsCmFlapLastFlapTime",
    "oid": "1.3.6.1.4.1.9.9.114.1.1.11.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DateAndTime",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The flap time is set whenever the Cable Modem triggers a flap detector."
  },
  "ccsCmFlapCreateTime": {
    "name": "ccsCmFlapCreateTime",
    "oid": "1.3.6.1.4.1.9.9.114.1.1.11.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DateAndTime",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The time that this entry was added to the table. If an entry is removed and then later re-added, there may be a discontinuity in the counters associated with this entry. This timestamp can be used to detect those discontinuities."
  },
  "ccsCmFlapInsertionFailNum": {
    "name": "ccsCmFlapInsertionFailNum",
    "oid": "1.3.6.1.4.1.9.9.114.1.1.11.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The number of times a Cable Modem registered more frequently than expected. Excessive registration is defined as the presence of a time span between two successive registration cycles which is less than a threshold span (ccsFlapInsertionTime). A Cable Modem may fail the ranging or registration process due to not being able to get an IP address. When the Cable Modem can not finish registration within the insertion time, it retries the process and sends the Initial Maintenance packet again. CMTS will receive the Initial Maintenance packet from the Cable Modem sooner than expected and the Cable Modem is considered a flapping modem. This object may indicate: Intermittent downstream sync loss, or DHCP or modem registration problems. The Flap number (ccsCmFlapTotalNum) will be incremented when this object is incremented. The value of this object can be reset to zero if this entry is removed from the table and then re-added, or if the ccsCmFlapResetNow object was set to true(1). The value of the object ccsCmFlapLastResetTime indicates the last reset time."
  },
  "ccsCmFlapHitNum": {
    "name": "ccsCmFlapHitNum",
    "oid": "1.3.6.1.4.1.9.9.114.1.1.11.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The number of times the CMTS receives the Ranging request from the Cable Modem. The CMTS issues a Station Maintenance transmit opportunity at a typical rate of once every 10 seconds and waits for a Ranging request from the Cable Modem. If the CMTS receives a Ranging request then the Hit number will be increased by 1 If the FlapTotal object is high, both Hit and Miss objects are high, and other statistical objects are relatively low then the flapping is probably caused by the modem going up and down. The Hit and Miss objects keep-alive polling statistics. The Hit object should be much greater than the Misses count. The value of this object can be reset to zero if this entry is removed from the table and then re-added, or if the ccsCmFlapResetNow object was set to true(1). The value of the object ccsCmFlapLastResetTime indicates the last reset time."
  },
  "ccsCmFlapMissNum": {
    "name": "ccsCmFlapMissNum",
    "oid": "1.3.6.1.4.1.9.9.114.1.1.11.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The number of times the CMTS misses the Ranging request from the Cable Modem. The CMTS issues a Station Maintenance packet every 10 seconds and waits for a Ranging request from the Cable Modem. If the CMTS misses a Ranging request within 25 msec then the Miss Object will be incremented. If ccsCmFlapTotalNum is high, Hit and Miss are high but ccsCmFlapPowerAdjustmentNum and ccsCmFlapInsertionFailNum are low then the flapping is probably caused by the modem going up and down. Miss object can indicate: Intermittent upstream, Laser clipping, or Noise bursts. Laser clipping can happen if the signal power is too high when the upstream electrical signal is converted to an optical signal. When it happens the more input produces less output, until finally there is no more increase in output. This phenomena is called laser clipping. The value of this object can be reset to zero if this entry is removed from the table and then re-added, or if the ccsCmFlapResetNow object was set to true(1). The value of the object ccsCmFlapLastResetTime indicates the last reset time."
  },
  "ccsCmFlapCrcErrorNum": {
    "name": "ccsCmFlapCrcErrorNum",
    "oid": "1.3.6.1.4.1.9.9.114.1.1.11.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The number of times the CMTS upstream receiver flagged a packet with a CRC error. If ccsCmFlapCrcErrorNum is high, it indicates the cable upstream may have high noise level. The modem may not be flapping yet but it may be a potential problem. This object can indicate: Intermittent upstream, Laser clipping, or Noise bursts. Laser clipping can happen if the signal power is too high when the upstream electrical signal is converted to an optical signal. When it happens the more input produces less output, until finally there is no more increase in output. This phenomena is called laser clipping. The value of this object can be reset to zero if this entry is removed from the table and then re-added, or if the ccsCmFlapResetNow object was set to true(1). The value of the object ccsCmFlapLastResetTime indicates the last reset time."
  },
  "ccsCmFlapPowerAdjustmentNum": {
    "name": "ccsCmFlapPowerAdjustmentNum",
    "oid": "1.3.6.1.4.1.9.9.114.1.1.11.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The number of times the Cable Modem upstream transmit power is adjusted during station maintenance. When the adjustment is greater than the power adjustment threshold the number will be incremented. The power adjustment threshold is chosen in an implementation-dependent manner The Flap number (ccsCmFlapTotalNum) will be incremented when this object is incremented. If ccsCmFlapTotalNum is high, ccsCmFlapPowerAdjustmentNum is high but the Hit and Miss are low and ccsCmFlapInsertionFailNum are low then the flapping is probably caused by an improper transmit power level setting at the modem end. This object can indicate: Amplifier degradation, Poor connections, or Wind, moisture, or temperature sensitivity. The value of this object can be reset to zero if this entry is removed from the table and then re-added, or if the ccsCmFlapResetNow object was set to true(1). The value of the object ccsCmFlapLastResetTime indicates the last reset time."
  },
  "ccsCmFlapTotalNum": {
    "name": "ccsCmFlapTotalNum",
    "oid": "1.3.6.1.4.1.9.9.114.1.1.11.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Whenever the Cable Modem passes flap detection, then the flap number is increased. There are 3 flap detectors defined: (1) When ccsCmFlapInsertionFailNum is increased the Flap number will be increased. (2) When the CMTS receives a Miss followed by a Hit then the Flap number will be increased. (3) When ccsCmFlapPowerAdjustmentNum is increased the Flap number will be increased. The value of this object can be reset to zero if this entry is removed from the table and then re-added, or if the ccsCmFlapResetNow object was set to true(1). The value of the object ccsCmFlapLastResetTime indicates the last reset time."
  },
  "ccsCmFlapResetNow": {
    "name": "ccsCmFlapResetNow",
    "oid": "1.3.6.1.4.1.9.9.114.1.1.11.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Setting this object to true(1) will set the value of certain objects in this table to 0 and does not destroy the entry, so the ccsCmFlapCreateTime will be unchanged. Reading this object always returns false(2)."
  },
  "ccsCmFlapLastResetTime": {
    "name": "ccsCmFlapLastResetTime",
    "oid": "1.3.6.1.4.1.9.9.114.1.1.11.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DateAndTime",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The last time that all the statistical objects of this entry are started from zero. There are several ways to restart the the statistical objects from zero. Setting the object ccsCmFlapResetNow or ccsCmFlapResetAll to true via SNMP is one way and and the other way is via command Line Interface. This timestamp can be used to know the last time the statistical objects are started from zero. The special value of all '00'Hs indicates that these statistical objects of this entry in the ccsCmFlapTable have never been reset."
  },
  "ccsCmFlapRowStatus": {
    "name": "ccsCmFlapRowStatus",
    "oid": "1.3.6.1.4.1.9.9.114.1.1.11.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "RowStatus",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Controls and reflects the status of rows in this table. When a cable modem triggers a flap detector, if an entry does not already exist for this cable modem, an entry will be created in this table. The new instance of this object will be set to active(1). All flapping modems have the status of active(1). Active entries are removed from the table after they have not triggered any additional flap detectors for the period of time defined in ccsFlapAging. Alternatively, setting this instance to destroy(6) will remove the entry immediately. createAndGo(4) and createAndWait(5) are not supported."
  },
  "ccsSpectrumRequestTable": {
    "name": "ccsSpectrumRequestTable",
    "oid": "1.3.6.1.4.1.9.9.114.1.2.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This table contains the spectrum data requests. There are two types of request: background noise and SNR. Refer to ccsSpectrumRequestIfIndex and ccsSpectrumRequestMacAddr DESCRIPTIONS on how the type of request is determined."
  },
  "ccsSpectrumRequestEntry": {
    "name": "ccsSpectrumRequestEntry",
    "oid": "1.3.6.1.4.1.9.9.114.1.2.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsSpectrumRequestIndex",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "Information about a spectrum data request. The management system uses ccsSpectrumRequestStatus to control entry modification, creation, and deletion. Setting ccsSpectrumRequestEntry to 'destroy' causes entry and its associated data (example: ccsSpectrumDataEntry) to be cleaned up properly. It is suggested the entry to be set to 'destroy' when the row is no longer in use."
  },
  "ccsSpectrumRequestIndex": {
    "name": "ccsSpectrumRequestIndex",
    "oid": "1.3.6.1.4.1.9.9.114.1.2.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 100
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "An arbitrary integer to uniquely identify the entry."
  },
  "ccsSpectrumRequestIfIndex": {
    "name": "ccsSpectrumRequestIfIndex",
    "oid": "1.3.6.1.4.1.9.9.114.1.2.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InterfaceIndexOrZero",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The ifIndex of a docsCableUpstream(129) interface. The background noise measurement is requested when ccsSpectrumRequestIfIndex is specified. The receiving power measurement is requested when ccsSpectrumRequestMacAddr is specified; In this case, ccsSpectrumRequestIfIndex is the ifIndex of the remote CM's upstream."
  },
  "ccsSpectrumRequestMacAddr": {
    "name": "ccsSpectrumRequestMacAddr",
    "oid": "1.3.6.1.4.1.9.9.114.1.2.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "MacAddress",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "000000000000",
        "format": "hex"
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "A MAC address that identifies a remote CM. The default value of 0000.0000.0000 indicates that the background noise will be measured for the upstream. In this case, ccsSpectrumRequestIfIndex must be specified. Other values indicate that the receiving power test is requested for the ccsSpectrumRequestMacAddr with CM signals."
  },
  "ccsSpectrumRequestLowFreq": {
    "name": "ccsSpectrumRequestLowFreq",
    "oid": "1.3.6.1.4.1.9.9.114.1.2.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CCSFrequency",
      "class": "type"
    },
    "default": {
      "default": {
        "value": 5000,
        "format": "decimal"
      }
    },
    "units": "KHz",
    "maxaccess": "read-create",
    "status": "current",
    "description": "Start of frequency range. The ccsSpectrumRequestLowFreq is adjusted slightly to accurately represent the actual starting point of the frequency range. The adjustment is done as follows: aFactor = (center frequency - ccsSpectrumRequestLowFreq)/12K ccsSpectrumRequestLowFreq = center frequency - (aFactor * 12K) where 12K is the FFT's bin size."
  },
  "ccsSpectrumRequestUpperFreq": {
    "name": "ccsSpectrumRequestUpperFreq",
    "oid": "1.3.6.1.4.1.9.9.114.1.2.1.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CCSFrequency",
      "class": "type"
    },
    "default": {
      "default": {
        "value": 42000,
        "format": "decimal"
      }
    },
    "units": "KHz",
    "maxaccess": "read-create",
    "status": "current",
    "description": "End of frequency range. With the adjustment done to the ccsSpectrumRequestLowFreq, ccsSpectrumRequestUpperFreq will also be adjusted to the last frequency within the specified range divisible by the bin size. Refer to the ccsSpectrumRequestLowFreq DESCRIPTION for the adjustment calculation."
  },
  "ccsSpectrumRequestResolution": {
    "name": "ccsSpectrumRequestResolution",
    "oid": "1.3.6.1.4.1.9.9.114.1.2.1.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 12,
            "max": 37000
          }
        ]
      }
    },
    "default": {
      "default": {
        "value": 60,
        "format": "decimal"
      }
    },
    "units": "KHz",
    "maxaccess": "read-create",
    "status": "current",
    "description": "A span between two frequencies. ccsSpectrumRequestResolution dictates the amount of receiving power data to be returned in ccsSpectrumDataTable. The finer the resolution, the more data returned. ccsSpectrumRequestResolution is adjusted to a value which is divisible by FFT's 12KHz bin size."
  },
  "ccsSpectrumRequestOperation": {
    "name": "ccsSpectrumRequestOperation",
    "oid": "1.3.6.1.4.1.9.9.114.1.2.1.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CCSRequestOperation",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "none",
        "format": "enum"
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The control that allows 'start' or 'abort' of the test. Since there is only 1 FFT engine running on the CMTS, 'start' changes ccsSpectrumRequestOperState to 'pending' state if the FFT is busy; Otherwise, it changes ccsSpectrumRequestOperState to 'running'. 'abort' changes ccsSpectrumRequestOperState to 'aborted' state. 'abort' is only allowed when ccsSpectrumRequestOperState is in 'pending' state. Only 'start' when request is to be started and 'abort' when request is to be aborted can be set by the user. It is set to 'none' only on completion of the request by the FFT engine. Note: The SNMP SET is rejected if ccsSpectrumRequestStatus is not 'active'."
  },
  "ccsSpectrumRequestOperState": {
    "name": "ccsSpectrumRequestOperState",
    "oid": "1.3.6.1.4.1.9.9.114.1.2.1.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CCSRequestOperState",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The operational state of the test. ccsSpectrumRequestIfIndex, ccsSpectrumRequestMacAddr, ccsSpectrumRequestUpperFreq, ccsSpectrumRequestLowFreq and ccsSpectrumRequestResolution cannot be changed when CCSRequestOperState is in the 'running' state. For a detailed description, see the CCSRequestOperState DESCRIPTION."
  },
  "ccsSpectrumRequestStartTime": {
    "name": "ccsSpectrumRequestStartTime",
    "oid": "1.3.6.1.4.1.9.9.114.1.2.1.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TimeStamp",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The value of sysUpTime when the spectrum measurement operation starts."
  },
  "ccsSpectrumRequestStoppedTime": {
    "name": "ccsSpectrumRequestStoppedTime",
    "oid": "1.3.6.1.4.1.9.9.114.1.2.1.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TimeStamp",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The value of sysUpTime when the spectrum measurement operation stops."
  },
  "ccsSpectrumRequestStatus": {
    "name": "ccsSpectrumRequestStatus",
    "oid": "1.3.6.1.4.1.9.9.114.1.2.1.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "RowStatus",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The control that allows modification, creation, and deletion of entries. For detailed rules, see the ccsSpectrumRequestEntry DESCRIPTION."
  },
  "ccsSpectrumDataTable": {
    "name": "ccsSpectrumDataTable",
    "oid": "1.3.6.1.4.1.9.9.114.1.2.2",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This table contains the receiving power or background noise measurement based on the criteria that is set in the ccsSpectrumRequestEntry."
  },
  "ccsSpectrumDataEntry": {
    "name": "ccsSpectrumDataEntry",
    "oid": "1.3.6.1.4.1.9.9.114.1.2.2.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsSpectrumRequestIndex",
        "implied": 0
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsSpectrumDataFreq",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "Information about the receiving power or background noise measured at a particular frequency for the ccsSpectrumRequestEntry."
  },
  "ccsSpectrumDataFreq": {
    "name": "ccsSpectrumDataFreq",
    "oid": "1.3.6.1.4.1.9.9.114.1.2.2.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CCSMeasuredFrequency",
      "class": "type"
    },
    "units": "KHz",
    "maxaccess": "read-only",
    "status": "current",
    "description": "ccsSpectrumDataPower measurement frequency. Due to the adjustment calculation the starting frequency range for the actual measured frequency if off comparing to the configured frequency. Refer to ccsSpectrumRequestLowFreq DESCRIPTIONS for the adjustment calculation."
  },
  "ccsSpectrumDataPower": {
    "name": "ccsSpectrumDataPower",
    "oid": "1.3.6.1.4.1.9.9.114.1.2.2.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": -50,
            "max": 50
          }
        ]
      }
    },
    "units": "dBmV",
    "maxaccess": "read-only",
    "status": "current",
    "description": "The receiving power measured at the ccsSpectrumDataFreq."
  },
  "ccsSNRRequestTable": {
    "name": "ccsSNRRequestTable",
    "oid": "1.3.6.1.4.1.9.9.114.1.2.3",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A table of CNR requests."
  },
  "ccsSNRRequestEntry": {
    "name": "ccsSNRRequestEntry",
    "oid": "1.3.6.1.4.1.9.9.114.1.2.3.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsSNRRequestIndex",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "Information about an CNR request. The management system uses ccsSNRRequestStatus to control entry modification, creation, and deletion."
  },
  "ccsSNRRequestIndex": {
    "name": "ccsSNRRequestIndex",
    "oid": "1.3.6.1.4.1.9.9.114.1.2.3.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 100
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "An arbitrary integer to uniquely identify this entry."
  },
  "ccsSNRRequestMacAddr": {
    "name": "ccsSNRRequestMacAddr",
    "oid": "1.3.6.1.4.1.9.9.114.1.2.3.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "MacAddress",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "A MAC address that identifies the remote online CM that the CNR measurement operation is being performed on."
  },
  "ccsSNRRequestSNR": {
    "name": "ccsSNRRequestSNR",
    "oid": "1.3.6.1.4.1.9.9.114.1.2.3.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": -100,
            "max": 100
          }
        ]
      }
    },
    "units": "dB",
    "maxaccess": "read-only",
    "status": "current",
    "description": "A snap shot of the CNR value that is measured over the in-use band frequency. The ccsSNRRequestSNR is set to 0 when ccsSNRRequestOperState is in the 'running' state."
  },
  "ccsSNRRequestOperation": {
    "name": "ccsSNRRequestOperation",
    "oid": "1.3.6.1.4.1.9.9.114.1.2.3.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CCSRequestOperation",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "none",
        "format": "enum"
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The control that allows start or abort of the test. Since there is only 1 FFT engine running on the CMTS, 'start' changes ccsSNRRequestOperState to 'pending' state if the FFT is busy; Otherwise, it changes ccsSNRRequestOperState to 'running'. 'abort' changes ccsSNRRequestOperState to 'aborted' state. Only 'start' when request is to be started and 'abort' when request is to be aborted can be set by the user. It is set to 'none' only on completion of the request by the FFT engine."
  },
  "ccsSNRRequestOperState": {
    "name": "ccsSNRRequestOperState",
    "oid": "1.3.6.1.4.1.9.9.114.1.2.3.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CCSRequestOperState",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The operational state of the test. ccsSNRRequestMacAddr, cannot be changed when the ccsSNRRequestOperState is in the 'running' state."
  },
  "ccsSNRRequestStartTime": {
    "name": "ccsSNRRequestStartTime",
    "oid": "1.3.6.1.4.1.9.9.114.1.2.3.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TimeStamp",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The value of sysUpTime when the CNR measurement operation starts."
  },
  "ccsSNRRequestStoppedTime": {
    "name": "ccsSNRRequestStoppedTime",
    "oid": "1.3.6.1.4.1.9.9.114.1.2.3.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TimeStamp",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The value of sysUpTime when the CNR measurement operation stops."
  },
  "ccsSNRRequestStatus": {
    "name": "ccsSNRRequestStatus",
    "oid": "1.3.6.1.4.1.9.9.114.1.2.3.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "RowStatus",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The control that allows modification, creation, and deletion of entries. For detailed rules see the ccsSpectrumRequestEntry DESCRIPTION."
  },
  "ccsUpInSpecGroupTable": {
    "name": "ccsUpInSpecGroupTable",
    "oid": "1.3.6.1.4.1.9.9.114.1.2.4",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This table contains the cable upstream interfaces assigned to a spectrum group. A spectrum group contains one or more fixed frequencies or frequency bands which can be assigned to cable upstream interfaces in the spectrum group."
  },
  "ccsUpInSpecGroupEntry": {
    "name": "ccsUpInSpecGroupEntry",
    "oid": "1.3.6.1.4.1.9.9.114.1.2.4.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsSpecGroupNumber",
        "implied": 0
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsSpecGroupUpstreamIfIndex",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry in ccsUpInSpecGroupTable table. Each entry represents a cable upstream interface assigned to a spectrum group."
  },
  "ccsSpecGroupNumber": {
    "name": "ccsSpecGroupNumber",
    "oid": "1.3.6.1.4.1.9.9.114.1.2.4.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 4294967295
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "The spectrum group number. The value of the object is same as the value of ccsUpSpecMgmtSpecGroup object except value 0."
  },
  "ccsSpecGroupUpstreamIfIndex": {
    "name": "ccsSpecGroupUpstreamIfIndex",
    "oid": "1.3.6.1.4.1.9.9.114.1.2.4.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InterfaceIndex",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "The ifIndex of the Cable upstream interface belonging to this Spectrum Group. The value of the corresponding instance of ifType is 'docsCableUpstream(129)'."
  },
  "ccsSpecGroupUpstreamStorage": {
    "name": "ccsSpecGroupUpstreamStorage",
    "oid": "1.3.6.1.4.1.9.9.114.1.2.4.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "StorageType",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The storage type for this conceptual row."
  },
  "ccsSpecGroupUpstreamRowStatus": {
    "name": "ccsSpecGroupUpstreamRowStatus",
    "oid": "1.3.6.1.4.1.9.9.114.1.2.4.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "RowStatus",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The status for this conceptual row. This object is used for creating/deleting entries in ccsUpInSpecGroupTable."
  },
  "ccsUpInFiberNodeTable": {
    "name": "ccsUpInFiberNodeTable",
    "oid": "1.3.6.1.4.1.9.9.114.1.2.5",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This table contains the cable upstream interfaces in a fiber-node.Each fiber-node uniquely represents an RF domain.Cable upstream interfaces in the same fiber-node are physically combined together into the same RF domain."
  },
  "ccsUpInFiberNodeEntry": {
    "name": "ccsUpInFiberNodeEntry",
    "oid": "1.3.6.1.4.1.9.9.114.1.2.5.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsFiberNodeNumber",
        "implied": 0
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsFiberNodeUpstreamIfIndex",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry in ccsUpInFiberNodeTable. Each entry represents a cable upstream interface assigned to a fiber-node."
  },
  "ccsFiberNodeNumber": {
    "name": "ccsFiberNodeNumber",
    "oid": "1.3.6.1.4.1.9.9.114.1.2.5.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 4294967295
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "The fiber-node number. The value of the object is same as the value of ccsUpSpecMgmtSharedSpectrum except value 0."
  },
  "ccsFiberNodeUpstreamIfIndex": {
    "name": "ccsFiberNodeUpstreamIfIndex",
    "oid": "1.3.6.1.4.1.9.9.114.1.2.5.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InterfaceIndex",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "The ifIndex of the Cable upstream interface belonging to this Spectrum Group. The value of the corresponding instance of ifType is 'docsCableUpstream(129)'."
  },
  "ccsFiberNodeUpstreamStorage": {
    "name": "ccsFiberNodeUpstreamStorage",
    "oid": "1.3.6.1.4.1.9.9.114.1.2.5.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "StorageType",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The storage type for this conceptual row."
  },
  "ccsFiberNodeUpstreamRowStatus": {
    "name": "ccsFiberNodeUpstreamRowStatus",
    "oid": "1.3.6.1.4.1.9.9.114.1.2.5.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "RowStatus",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The status for this conceptual row. This object is used for creating/deleting entries in ccsUpInFiberNodeTable."
  },
  "ccsUpSpecMgmtTable": {
    "name": "ccsUpSpecMgmtTable",
    "oid": "1.3.6.1.4.1.9.9.114.1.3.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This table contains the attributes of the cable upstream interfaces, ifType of docsCableUpstream(129), to be used for improving performance and proactive hopping. Proactive hopping is achieved by setting the SNR polling period over the in-use band without CM signals."
  },
  "ccsUpSpecMgmtEntry": {
    "name": "ccsUpSpecMgmtEntry",
    "oid": "1.3.6.1.4.1.9.9.114.1.3.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "IF-MIB",
        "object": "ifIndex",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "Upstream interface's spectrum management information."
  },
  "ccsUpSpecMgmtHopPriority": {
    "name": "ccsUpSpecMgmtHopPriority",
    "oid": "1.3.6.1.4.1.9.9.114.1.3.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "frqModChannel": 0,
          "frqChannelMod": 1,
          "modFrqChannel": 2,
          "modChannelFrq": 3,
          "channelFrqMod": 4,
          "channelModFrq": 5
        }
      }
    },
    "default": {
      "default": {
        "value": "frqModChannel",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "A preference priority for changing the frequency, modulation, or channel width supporting the automatic switching of the modulation scheme when the channel becomes noisy. The default priority is frequency, modulation, and channel width. With the default preference, the frequency is changed if there is a clean band available. If there's no clean band available, the modulation is changed. And if the clean band is still not available, the bandwidth is reduced until an acceptable band is found or a minimum bandwidth of 200KHz."
  },
  "ccsUpSpecMgmtSnrThres1": {
    "name": "ccsUpSpecMgmtSnrThres1",
    "oid": "1.3.6.1.4.1.9.9.114.1.3.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 0
          },
          {
            "min": 5,
            "max": 35
          }
        ]
      }
    },
    "default": {
      "default": {
        "value": 25,
        "format": "decimal"
      }
    },
    "units": "dB",
    "maxaccess": "read-write",
    "status": "current",
    "description": "The Signal to Noise (SNR) threshold. This object is applicable for modulation profile 1. When the CMTS detects that the SNR goes lower than ccsUpSpecMgmtSnrThres1, it switches to profile 2. Therefore, ccsUpSpecMgmtSnrThres1 should be larger than ccsUpSpecMgmtSnrThres2. A value 0 indicates to bypass the threshold check."
  },
  "ccsUpSpecMgmtSnrThres2": {
    "name": "ccsUpSpecMgmtSnrThres2",
    "oid": "1.3.6.1.4.1.9.9.114.1.3.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 0
          },
          {
            "min": 5,
            "max": 35
          }
        ]
      }
    },
    "default": {
      "default": {
        "value": 15,
        "format": "decimal"
      }
    },
    "units": "dB",
    "maxaccess": "read-write",
    "status": "current",
    "description": "The Signal to Noise (SNR) threshold. This object is applicable for modulation profile 2. Refer to ccsUpSpecMgmtCriteria on how ccsUpSpecMgmtSnrThres2 can trigger a change in frequency, modulation or channel width. A value 0 indicates to bypass the threshold check. Note: The SNMP SET is rejected if both ccsUpSpecMgmtSnrThres1, ccsUpSpecMgmtSnrThres2 are non-zero and ccsUpSpecMgmtSnrThres2 is higher than ccsUpSpecMgmtSnrThres1."
  },
  "ccsUpSpecMgmtFecCorrectThres1": {
    "name": "ccsUpSpecMgmtFecCorrectThres1",
    "oid": "1.3.6.1.4.1.9.9.114.1.3.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 0
          },
          {
            "min": 1,
            "max": 30
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The Forward Error Correction (FEC) correctable count threshold. This object is applicable for profile 1. A value 0 indicates to bypass the threshold check. When CMTS detects that FEC correctable count goes higher than ccsUpSpecMgmtFecCorrectThres1, it switch to Profile 2. Therefore, ccsUpSpecMgmtFecCorrectThres1 should be smaller than ccsUpSpecMgmtFecCorrectThres2."
  },
  "ccsUpSpecMgmtFecCorrectThres2": {
    "name": "ccsUpSpecMgmtFecCorrectThres2",
    "oid": "1.3.6.1.4.1.9.9.114.1.3.1.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 20
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "deprecated",
    "description": "The FEC correctable count threshold. This object is applicable for profile 2. When CMTS detects that FEC correctable count goes higher than ccsUpSpecMgmtFecCorrectThres2, modulation change can occur, depending on the type of ccsUpSpecMgmtHopPriority. Note: SNMP SET will be rejected if ccsUpSpecMgmtFecCorrectThres2 is lower than ccsUpSpecMgmtFecCorrectThres1."
  },
  "ccsUpSpecMgmtFecUnCorrectThres1": {
    "name": "ccsUpSpecMgmtFecUnCorrectThres1",
    "oid": "1.3.6.1.4.1.9.9.114.1.3.1.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 0
          },
          {
            "min": 1,
            "max": 30
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The FEC uncorrectable count threshold. This object is applicable for modulation profile 1. A value 0 indicates to bypass the threshold check. When CMTS detects that FEC uncorrectable count goes higher than ccsUpSpecMgmtFecUnCorrectThres1, it switches to Profile 2. Therefore, ccsUpSpecMgmtFecUnCorrectThres1 should be smaller than ccsUpSpecMgmtFecUnCorrectThres2."
  },
  "ccsUpSpecMgmtFecUnCorrectThres2": {
    "name": "ccsUpSpecMgmtFecUnCorrectThres2",
    "oid": "1.3.6.1.4.1.9.9.114.1.3.1.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 0
          },
          {
            "min": 1,
            "max": 30
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The FEC uncorrectable count threshold. This object is applicable for modulation profile 2. A value 0 indicates to bypass the threshold check. Refer to ccsUpSpecMgmtCriteria on how ccsUpSpecMgmtFecUnCorrectThres2 can trigger a change in frequency, modulation or channel width. Note: SNMP SET is rejected if ccsUpSpecMgmtFecUnCorrectThres2 is lower than ccsUpSpecMgmtFecUnCorrectThres1."
  },
  "ccsUpSpecMgmtSnrPollPeriod": {
    "name": "ccsUpSpecMgmtSnrPollPeriod",
    "oid": "1.3.6.1.4.1.9.9.114.1.3.1.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 500,
            "max": 25000
          }
        ]
      }
    },
    "default": {
      "default": {
        "value": 500,
        "format": "decimal"
      }
    },
    "units": "msec",
    "maxaccess": "read-write",
    "status": "deprecated",
    "description": "A period between SNR pollings. The SNR is collected from the Fast Fourier Transform (FFT) measurement over the in-use band when there is no CM signals. When the CMTS detects that SNR doesn't meet ccsUpSpecMgmtSnrThres1 or ccsUpSpecMgmtSnrThres2, a possible hopping occurs, depending on the type of ccsUpSpecMgmtHopPriority."
  },
  "ccsUpSpecMgmtHopCondition": {
    "name": "ccsUpSpecMgmtHopCondition",
    "oid": "1.3.6.1.4.1.9.9.114.1.3.1.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "snr": 0,
          "stationMaintainenceMiss": 1,
          "others": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "deprecated",
    "description": "A condition that triggers hopping. The SNR condition occurs when SNR does not meet the ccsUpSpecMgmtSnrThres1 or ccsUpSpecMgmtSnrThres2. The stationMaintainenceMiss condition occurs when the percentage of offline CMs is reached."
  },
  "ccsUpSpecMgmtFromCenterFreq": {
    "name": "ccsUpSpecMgmtFromCenterFreq",
    "oid": "1.3.6.1.4.1.9.9.114.1.3.1.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 0
          },
          {
            "min": 5000,
            "max": 65000
          }
        ]
      }
    },
    "units": "KHz",
    "maxaccess": "read-only",
    "status": "current",
    "description": "Center frequency before hopping occurs. A value 0 indicates that the interface has no frequency assigned."
  },
  "ccsUpSpecMgmtToCenterFreq": {
    "name": "ccsUpSpecMgmtToCenterFreq",
    "oid": "1.3.6.1.4.1.9.9.114.1.3.1.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 0
          },
          {
            "min": 5000,
            "max": 65000
          }
        ]
      }
    },
    "units": "KHz",
    "maxaccess": "read-only",
    "status": "current",
    "description": "Current center frequency. A value 0 indicates that the interface has no frequency assigned."
  },
  "ccsUpSpecMgmtFromBandWidth": {
    "name": "ccsUpSpecMgmtFromBandWidth",
    "oid": "1.3.6.1.4.1.9.9.114.1.3.1.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 200,
            "max": 200
          },
          {
            "min": 400,
            "max": 400
          },
          {
            "min": 800,
            "max": 800
          },
          {
            "min": 1600,
            "max": 1600
          },
          {
            "min": 3200,
            "max": 3200
          },
          {
            "min": 6400,
            "max": 6400
          }
        ]
      }
    },
    "units": "KHz",
    "maxaccess": "read-only",
    "status": "current",
    "description": "Bandwidth before hopping occurs."
  },
  "ccsUpSpecMgmtToBandWidth": {
    "name": "ccsUpSpecMgmtToBandWidth",
    "oid": "1.3.6.1.4.1.9.9.114.1.3.1.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 200,
            "max": 200
          },
          {
            "min": 400,
            "max": 400
          },
          {
            "min": 800,
            "max": 800
          },
          {
            "min": 1600,
            "max": 1600
          },
          {
            "min": 3200,
            "max": 3200
          },
          {
            "min": 6400,
            "max": 6400
          }
        ]
      }
    },
    "units": "KHz",
    "maxaccess": "read-only",
    "status": "current",
    "description": "Current bandwidth."
  },
  "ccsUpSpecMgmtFromModProfile": {
    "name": "ccsUpSpecMgmtFromModProfile",
    "oid": "1.3.6.1.4.1.9.9.114.1.3.1.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 2147483647
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Modulation profile index before hopping occurs. It is the index identical to the docsIfModIndex in the docsIfCmtsModulationTable. For the detailed descriptions, see the docsIfCmtsModulationTable and docsIfCmtsModIndex DESCRIPTIONS."
  },
  "ccsUpSpecMgmtToModProfile": {
    "name": "ccsUpSpecMgmtToModProfile",
    "oid": "1.3.6.1.4.1.9.9.114.1.3.1.1.15",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 2147483647
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The current modulation profile index. It is the index identical to the docsIfModIndex in the docsIfCmtsModulationTable. For the detailed descriptions, see the docsIfCmtsModulationTable and docsIfCmtsModIndex DESCRIPTIONS."
  },
  "ccsUpSpecMgmtSNR": {
    "name": "ccsUpSpecMgmtSNR",
    "oid": "1.3.6.1.4.1.9.9.114.1.3.1.1.16",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": -100,
            "max": 100
          }
        ]
      }
    },
    "units": "dB",
    "maxaccess": "read-only",
    "status": "current",
    "description": "Current SNR. A value -99 indicates the system detected no modem on line, and a value of -100 indicates the system was unable to retrieve the SNR value."
  },
  "ccsUpSpecMgmtUpperBoundFreq": {
    "name": "ccsUpSpecMgmtUpperBoundFreq",
    "oid": "1.3.6.1.4.1.9.9.114.1.3.1.1.17",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CCSFrequency",
      "class": "type"
    },
    "units": "KHz",
    "maxaccess": "read-only",
    "status": "current",
    "description": "Upper bound frequency that the upstream supports."
  },
  "ccsUpSpecMgmtCnrThres1": {
    "name": "ccsUpSpecMgmtCnrThres1",
    "oid": "1.3.6.1.4.1.9.9.114.1.3.1.1.18",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 0
          },
          {
            "min": 5,
            "max": 35
          }
        ]
      }
    },
    "default": {
      "default": {
        "value": 25,
        "format": "decimal"
      }
    },
    "units": "dB",
    "maxaccess": "read-write",
    "status": "current",
    "description": "The Carrier to Noise (CNR) threshold. This object is applicable for modulation profile 1. When the CMTS detects that the CNR goes lower than ccsUpSpecMgmtCnrThres1, it switches to profile 2. Therefore, ccsUpSpecMgmtCnrThres1 should be larger than ccsUpSpecMgmtCnrThres2. A value 0 indicates to bypass the threshold check."
  },
  "ccsUpSpecMgmtCnrThres2": {
    "name": "ccsUpSpecMgmtCnrThres2",
    "oid": "1.3.6.1.4.1.9.9.114.1.3.1.1.19",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 0
          },
          {
            "min": 5,
            "max": 35
          }
        ]
      }
    },
    "default": {
      "default": {
        "value": 15,
        "format": "decimal"
      }
    },
    "units": "dB",
    "maxaccess": "read-write",
    "status": "current",
    "description": "The Carrier to Noise (CNR) threshold. This object is applicable for modulation profile 2. Refer to ccsUpSpecMgmtCriteria on how ccsUpSpecMgmtCnrThres2 can trigger a change in frequency, modulation or channel width. A value 0 indicates to bypass the threshold check. Note: The SNMP SET is rejected if both ccsUpSpecMgmtCnrThres1, ccsUpSpecMgmtCnrThres2 are non-zero and ccsUpSpecMgmtCnrThres2 is higher than ccsUpSpecMgmtCnrThres1."
  },
  "ccsUpSpecMgmtCNR": {
    "name": "ccsUpSpecMgmtCNR",
    "oid": "1.3.6.1.4.1.9.9.114.1.3.1.1.20",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": -100,
            "max": 100
          }
        ]
      }
    },
    "units": "dB",
    "maxaccess": "read-only",
    "status": "current",
    "description": "Current CNR. A value -99 indicates the system detected no modem on line, and a value of -100 indicates the system was unable to retrieve the CNR value."
  },
  "ccsUpSpecMgmtMissedMaintMsgThres": {
    "name": "ccsUpSpecMgmtMissedMaintMsgThres",
    "oid": "1.3.6.1.4.1.9.9.114.1.3.1.1.21",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 100
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The missed maintenance message threshold in percentage. A value 0 indicates that the interface has no spectrum group assigned. i.e. ccsUpSpecMgmtSpecGroup equals 0."
  },
  "ccsUpSpecMgmtHopPeriod": {
    "name": "ccsUpSpecMgmtHopPeriod",
    "oid": "1.3.6.1.4.1.9.9.114.1.3.1.1.22",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 0
          },
          {
            "min": 1,
            "max": 3600
          }
        ]
      }
    },
    "units": "seconds",
    "maxaccess": "read-only",
    "status": "current",
    "description": "The minimum time between frequency hops in seconds. A value 0 indicates that the interface has no spectrum group assigned. i.e. ccsUpSpecMgmtSpecGroup equals to 0."
  },
  "ccsUpSpecMgmtCriteria": {
    "name": "ccsUpSpecMgmtCriteria",
    "oid": "1.3.6.1.4.1.9.9.114.1.3.1.1.23",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Bits",
      "class": "type",
      "bits": {
        "snrBelowThres": 0,
        "cnrBelowThres": 1,
        "corrFecAboveThres": 2,
        "uncorrFecAboveThres": 3,
        "snrAboveThres": 4,
        "cnrAboveThres": 5,
        "corrFecBelowThres": 6,
        "uncorrFecBelowThres": 7,
        "noActiveModem": 8,
        "uncorrFecAboveSecondThres": 9,
        "others": 10
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Defines the criteria that trigger a change in frequency hopping, modulation or channel width. Depending on the type of linecards, the criteria are slightly different: For the linecards that have no Hardware Based Spectrum Management capability like the uBR-MC1xC, change in modulation or frequency occurs in the following criteria: 1) Change from modulation profile 1 to modulation profile 2 would occur when CMTS detects the SNR that goes below the threshold and either corr FEC or uncorr FEC is above the threshold. In this case, snrBelowThres and either corrFecAboveThres or uncorrFecAboveThres bits will get set. 2) Change from modulation profile 2 to modulation profile 1 would occur when CMTS detects the SNR goes above the threshold+3 and both corr FEC and uncorr FEC are below the threshold. In this case, snrAboveThres and corrFecBelowThres and uncorrFecBelowThres bits will get set. 3) Change in frequency or frequency hopping would occur when CMTS detects no active modem on the link. In this case, noActiveModem bit will get set accordingly. For the linecards that have the Hardware Based Spectrum Management capability, change in frequency, modulation or channel width occurs in the following criteria: 1) when CMTS detects the SNR or CNR goes below the threshold and either corr FEC or uncorr FEC is above the threshold. In this case, either snrBelowThres or cnrBelowThres and either corrFecAboveThres or uncorrFecAboveThres bits will get set. 2) when CMTS detects the SNR or CNR goes above the threshold + 3 and both corr FEC and uncorr FEC are below the threshold. In this case, either snrAboveThres or cnrAboveThres and both corrFecBelowThres and uncorrFecBelowThres bits will get set. 3) when CMTS detects no active modem on the link or uncorr FEC is above ccsUpSpecMgmtFecUnCorrectThres2. In this case noActiveModem or uncorrFecAboveSecondThres bit will get set accordingly. Note: The order of frequency, modulation or channel width changes for the advanced spectrum management linecards will be determined based on the selection of the ccsUpSpecMgmtHopPriority."
  },
  "ccsUpSpecMgmtSpecGroup": {
    "name": "ccsUpSpecMgmtSpecGroup",
    "oid": "1.3.6.1.4.1.9.9.114.1.3.1.1.24",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The spectrum group assigned to the upstream. The value of 0 for the object indicates that the upstream has no spectrum group assigned."
  },
  "ccsUpSpecMgmtSharedSpectrum": {
    "name": "ccsUpSpecMgmtSharedSpectrum",
    "oid": "1.3.6.1.4.1.9.9.114.1.3.1.1.25",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The fiber-node assigned to the upstreams. Upstreams having same fiber-node number indicates that they physically combine together into same RF domain and must have unique frequency assigned. The value of 0 for the object indicates that the upstream is not physically combine with any others."
  },
  "ccsSpecGroupFreqTable": {
    "name": "ccsSpecGroupFreqTable",
    "oid": "1.3.6.1.4.1.9.9.114.1.3.2",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This table contains the frequency and band configuration of the spectrum group."
  },
  "ccsSpecGroupFreqEntry": {
    "name": "ccsSpecGroupFreqEntry",
    "oid": "1.3.6.1.4.1.9.9.114.1.3.2.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsSpecGroupNumber",
        "implied": 0
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsSpecGroupFreqIndex",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry in ccsSpecGroupFreqTable. Each entry represents a center frequency or a frequency band configured for the spectrum group."
  },
  "ccsSpecGroupFreqIndex": {
    "name": "ccsSpecGroupFreqIndex",
    "oid": "1.3.6.1.4.1.9.9.114.1.3.2.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 4294967295
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "An arbitrary index to uniquely identify frequencies or bands configured in spectrum group."
  },
  "ccsSpecGroupFreqType": {
    "name": "ccsSpecGroupFreqType",
    "oid": "1.3.6.1.4.1.9.9.114.1.3.2.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "centerFreq": 1,
          "bandFreq": 2
        }
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The type of the frequency configured in spectrum group. This is a mandatory object and can be modified when the row is active. If the value of centerFreq(1) is specified, the values of the corresponding instance of ccsSpecGroupFreqLower and csSpecGroupFreqUpper object must be identical. If the value of bandFreq(2) is specified, the values of the corresponding instance of ccsSpecGroupFreqLower and csSpecGroupFreqUpper must be unique."
  },
  "ccsSpecGroupFreqLower": {
    "name": "ccsSpecGroupFreqLower",
    "oid": "1.3.6.1.4.1.9.9.114.1.3.2.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 1000000000
          }
        ]
      }
    },
    "units": "Hz",
    "maxaccess": "read-create",
    "status": "current",
    "description": "The lower frequency configured in spectrum group. This is a mandatory object and can be modified when the row is active. To configure a band frequency in the spectrum group, the value of this object must be lower than the value of the corresponding instance of ccsSpecGroupFreqUpper. To configure a fixed center frequency in the spectrum group, the value of this object must be equal to the value of the corresponding instance of ccsSpecGroupFreqUpper."
  },
  "ccsSpecGroupFreqUpper": {
    "name": "ccsSpecGroupFreqUpper",
    "oid": "1.3.6.1.4.1.9.9.114.1.3.2.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 1000000000
          }
        ]
      }
    },
    "units": "Hz",
    "maxaccess": "read-create",
    "status": "current",
    "description": "The upper frequency configured in spectrum group. This is a mandatory object and can be modified when the row is active. To configure a band frequency in the spectrum group, the value of this object must be greater than the value of the corresponding instance of ccsSpecGroupFreqLower. To configure a fixed center frequency in the spectrum group, the value of this object must be equal to the value of the corresponding instance of ccsSpecGroupFreqLower."
  },
  "ccsSpecGroupStorage": {
    "name": "ccsSpecGroupStorage",
    "oid": "1.3.6.1.4.1.9.9.114.1.3.2.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "StorageType",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The storage type for this conceptual row."
  },
  "ccsSpecGroupRowStatus": {
    "name": "ccsSpecGroupRowStatus",
    "oid": "1.3.6.1.4.1.9.9.114.1.3.2.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "RowStatus",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The status of this conceptual row. This object is used for creating/deleting entries in ccsSpecGroupFreqTable. A conceptual row may not be created via SNMP without explicitly setting the value of ccsSpecGroupRowStatus to createAndGo(4). A conceptual row can not have the status of active(1) until proper values have been assigned to the mandatory objects ccsSpecGroupFreqType, ccsSpecGroupFreqLower, and ccsSpecGroupFreqUpper. A conceptual row may be modified or deleted any time. If the frequency represents by the row has been assigned to a cable upstream interface, modifying or deleting such row would cause the cable upstream interface frequency reassignment."
  },
  "ciscoCableSpectrumMIBNotificationPrefix": {
    "name": "ciscoCableSpectrumMIBNotificationPrefix",
    "oid": "1.3.6.1.4.1.9.9.114.2",
    "class": "objectidentity"
  },
  "ccsMIBNotifications": {
    "name": "ccsMIBNotifications",
    "oid": "1.3.6.1.4.1.9.9.114.2.0",
    "class": "objectidentity"
  },
  "ccsHoppingNotification": {
    "name": "ccsHoppingNotification",
    "oid": "1.3.6.1.4.1.9.9.114.2.0.1",
    "class": "notificationtype",
    "objects": [
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtHopCondition"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtFromCenterFreq"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtToCenterFreq"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtFromBandWidth"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtToBandWidth"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtFromModProfile"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtToModProfile"
      }
    ],
    "status": "deprecated",
    "description": "A notification is sent when there's a change in frequency (hopping), modulation, or profile. In the case of frequency hopping, ccsUpSpecMgmtHopCondition would indicate whether SNR or modemOffline that caused the hopping."
  },
  "ccsSpecMgmtNotification": {
    "name": "ccsSpecMgmtNotification",
    "oid": "1.3.6.1.4.1.9.9.114.2.0.2",
    "class": "notificationtype",
    "objects": [
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtCriteria"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtFromCenterFreq"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtToCenterFreq"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtFromBandWidth"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtToBandWidth"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtFromModProfile"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtToModProfile"
      }
    ],
    "status": "current",
    "description": "A notification is sent when there's a change in frequency hopping, modulation, or profile. ccsUpSpecMgmtCriteria is used to indicate the cause(s)."
  },
  "ciscoCableSpectrumMIBConformance": {
    "name": "ciscoCableSpectrumMIBConformance",
    "oid": "1.3.6.1.4.1.9.9.114.3",
    "class": "objectidentity"
  },
  "ciscoCableSpectrumMIBCompliances": {
    "name": "ciscoCableSpectrumMIBCompliances",
    "oid": "1.3.6.1.4.1.9.9.114.3.1",
    "class": "objectidentity"
  },
  "ciscoCableSpectrumMIBGroups": {
    "name": "ciscoCableSpectrumMIBGroups",
    "oid": "1.3.6.1.4.1.9.9.114.3.2",
    "class": "objectidentity"
  },
  "ccsCompliance": {
    "name": "ccsCompliance",
    "oid": "1.3.6.1.4.1.9.9.114.3.1.1",
    "class": "modulecompliance",
    "modulecompliance": [
      {
        "object": "ccsFlapGroup",
        "module": "CISCO-CABLE-SPECTRUM-MIB"
      }
    ],
    "status": "obsolete",
    "description": "The compliance statement for devices that implement DOCSIS-compliant Radio Frequency Interfaces and Spectrum Management features."
  },
  "ccsCompliance2": {
    "name": "ccsCompliance2",
    "oid": "1.3.6.1.4.1.9.9.114.3.1.2",
    "class": "modulecompliance",
    "modulecompliance": [
      {
        "object": "ccsFlapGroup",
        "module": "CISCO-CABLE-SPECTRUM-MIB"
      },
      {
        "object": "ccsSpectrumGroup",
        "module": "CISCO-CABLE-SPECTRUM-MIB"
      },
      {
        "object": "ccsUpSpecMgmtGroup",
        "module": "CISCO-CABLE-SPECTRUM-MIB"
      }
    ],
    "status": "deprecated",
    "description": "The compliance statement for devices that implement DOCSIS- compliant Radio Frequency Interfaces and Spectrum Management features. This compliance is deprecated and replaced by ccsCompliance3."
  },
  "ccsCompliance3": {
    "name": "ccsCompliance3",
    "oid": "1.3.6.1.4.1.9.9.114.3.1.3",
    "class": "modulecompliance",
    "modulecompliance": [
      {
        "object": "ccsFlapGroupRev1",
        "module": "CISCO-CABLE-SPECTRUM-MIB"
      },
      {
        "object": "ccsSpectrumGroup",
        "module": "CISCO-CABLE-SPECTRUM-MIB"
      },
      {
        "object": "ccsUpSpecMgmtGroup",
        "module": "CISCO-CABLE-SPECTRUM-MIB"
      }
    ],
    "status": "deprecated",
    "description": "The compliance statement for devices that implement DOCSIS- compliant Radio Frequency Interfaces and Spectrum Management features."
  },
  "ccsCompliance4": {
    "name": "ccsCompliance4",
    "oid": "1.3.6.1.4.1.9.9.114.3.1.4",
    "class": "modulecompliance",
    "modulecompliance": [
      {
        "object": "ccsFlapGroupRev1",
        "module": "CISCO-CABLE-SPECTRUM-MIB"
      },
      {
        "object": "ccsSpectrumGroup",
        "module": "CISCO-CABLE-SPECTRUM-MIB"
      },
      {
        "object": "ccsNotificationGroup",
        "module": "CISCO-CABLE-SPECTRUM-MIB"
      },
      {
        "object": "ccsUpSpecMgmtGroupRev1",
        "module": "CISCO-CABLE-SPECTRUM-MIB"
      }
    ],
    "status": "deprecated",
    "description": "The compliance statement for devices that implement DOCSIS- compliant Radio Frequency Interfaces and Spectrum Management features."
  },
  "ccsCompliance5": {
    "name": "ccsCompliance5",
    "oid": "1.3.6.1.4.1.9.9.114.3.1.5",
    "class": "modulecompliance",
    "modulecompliance": [
      {
        "object": "ccsFlapGroupRev2",
        "module": "CISCO-CABLE-SPECTRUM-MIB"
      },
      {
        "object": "ccsSpectrumGroup",
        "module": "CISCO-CABLE-SPECTRUM-MIB"
      },
      {
        "object": "ccsNotificationGroup",
        "module": "CISCO-CABLE-SPECTRUM-MIB"
      },
      {
        "object": "ccsUpSpecMgmtGroupRev2",
        "module": "CISCO-CABLE-SPECTRUM-MIB"
      }
    ],
    "status": "deprecated",
    "description": "The compliance statement for devices that implement DOCSIS- compliant Radio Frequency Interfaces and Spectrum Management features."
  },
  "ccsCompliance6": {
    "name": "ccsCompliance6",
    "oid": "1.3.6.1.4.1.9.9.114.3.1.6",
    "class": "modulecompliance",
    "modulecompliance": [
      {
        "object": "ccsFlapGroupRev2",
        "module": "CISCO-CABLE-SPECTRUM-MIB"
      },
      {
        "object": "ccsSpectrumGroup",
        "module": "CISCO-CABLE-SPECTRUM-MIB"
      },
      {
        "object": "ccsNotificationGroupRev1",
        "module": "CISCO-CABLE-SPECTRUM-MIB"
      },
      {
        "object": "ccsUpSpecMgmtGroupRev3",
        "module": "CISCO-CABLE-SPECTRUM-MIB"
      }
    ],
    "status": "deprecated",
    "description": "The compliance statement for devices that implement DOCSIS- compliant Radio Frequency Interfaces and Spectrum Management features."
  },
  "ccsCompliance7": {
    "name": "ccsCompliance7",
    "oid": "1.3.6.1.4.1.9.9.114.3.1.7",
    "class": "modulecompliance",
    "modulecompliance": [
      {
        "object": "ccsFlapGroupRev2",
        "module": "CISCO-CABLE-SPECTRUM-MIB"
      },
      {
        "object": "ccsSpectrumGroup",
        "module": "CISCO-CABLE-SPECTRUM-MIB"
      },
      {
        "object": "ccsNotificationGroupRev1",
        "module": "CISCO-CABLE-SPECTRUM-MIB"
      },
      {
        "object": "ccsUpSpecMgmtGroupRev4",
        "module": "CISCO-CABLE-SPECTRUM-MIB"
      },
      {
        "object": "ccsSpecGroupFreqGroup",
        "module": "CISCO-CABLE-SPECTRUM-MIB"
      },
      {
        "object": "ccsUpInSpecGroupGroup",
        "module": "CISCO-CABLE-SPECTRUM-MIB"
      },
      {
        "object": "ccsUpInFiberNodeGroup",
        "module": "CISCO-CABLE-SPECTRUM-MIB"
      }
    ],
    "status": "current",
    "description": "The compliance statement for devices that implement DOCSIS- compliant Radio Frequency Interfaces and Spectrum Management features."
  },
  "ccsFlapGroup": {
    "name": "ccsFlapGroup",
    "oid": "1.3.6.1.4.1.9.9.114.3.2.1",
    "class": "objectgroup",
    "objects": [
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsFlapListMaxSize"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsFlapListCurrentSize"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsFlapAging"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsFlapInsertionTime"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsFlapUpstreamIfIndex"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsFlapDownstreamIfIndex"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsFlapInsertionFails"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsFlapHits"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsFlapMisses"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsFlapCrcErrors"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsFlapPowerAdjustments"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsFlapTotal"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsFlapLastFlapTime"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsFlapCreateTime"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsFlapRowStatus"
      }
    ],
    "status": "deprecated",
    "description": "Group of objects implemented in CMTS providing Flap List information. This object group has been deprecated and replaced by ccsFlapGroupRev1."
  },
  "ccsSpectrumGroup": {
    "name": "ccsSpectrumGroup",
    "oid": "1.3.6.1.4.1.9.9.114.3.2.2",
    "class": "objectgroup",
    "objects": [
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsSpectrumRequestIfIndex"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsSpectrumRequestMacAddr"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsSpectrumRequestUpperFreq"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsSpectrumRequestLowFreq"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsSpectrumRequestResolution"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsSpectrumRequestStartTime"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsSpectrumRequestStoppedTime"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsSpectrumRequestOperation"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsSpectrumRequestOperState"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsSpectrumRequestStatus"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsSpectrumDataFreq"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsSpectrumDataPower"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsSNRRequestMacAddr"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsSNRRequestSNR"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsSNRRequestStartTime"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsSNRRequestStoppedTime"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsSNRRequestOperation"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsSNRRequestOperState"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsSNRRequestStatus"
      }
    ],
    "status": "current",
    "description": "Group of objects implemented in Cable Modem Termination Systems providing upstream spectrum data information."
  },
  "ccsUpSpecMgmtGroup": {
    "name": "ccsUpSpecMgmtGroup",
    "oid": "1.3.6.1.4.1.9.9.114.3.2.3",
    "class": "objectgroup",
    "objects": [
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtHopPriority"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtSnrThres1"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtSnrThres2"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtFecCorrectThres1"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtFecCorrectThres2"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtFecUnCorrectThres1"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtFecUnCorrectThres2"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtSnrPollPeriod"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtHopCondition"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtFromCenterFreq"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtToCenterFreq"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtFromBandWidth"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtToBandWidth"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtFromModProfile"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtToModProfile"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtSNR"
      }
    ],
    "status": "deprecated",
    "description": "Group of objects implemented in Cable Modem Termination Systems for configuring cable upstream interface attributes which are used to increase the performance and proactive hopping."
  },
  "ccsNotificationGroup": {
    "name": "ccsNotificationGroup",
    "oid": "1.3.6.1.4.1.9.9.114.3.2.4",
    "class": "notificationgroup",
    "objects": [
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsHoppingNotification"
      }
    ],
    "status": "deprecated",
    "description": "The notification which a CISCO-CABLE-SPECTRUM-MIB entity is required to implement."
  },
  "ccsFlapGroupRev1": {
    "name": "ccsFlapGroupRev1",
    "oid": "1.3.6.1.4.1.9.9.114.3.2.5",
    "class": "objectgroup",
    "objects": [
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsFlapListMaxSize"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsFlapListCurrentSize"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsFlapAging"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsFlapInsertionTime"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsFlapUpstreamIfIndex"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsFlapDownstreamIfIndex"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsFlapLastFlapTime"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsFlapCreateTime"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsFlapRowStatus"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsFlapInsertionFailNum"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsFlapHitNum"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsFlapMissNum"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsFlapCrcErrorNum"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsFlapPowerAdjustmentNum"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsFlapTotalNum"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsFlapResetNow"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsFlapLastResetTime"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsFlapPowerAdjustThreshold"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsFlapMissThreshold"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsFlapResetAll"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsFlapClearAll"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsFlapLastClearTime"
      }
    ],
    "status": "deprecated",
    "description": "Group of objects implemented in CMTS providing Flap List information. This object group has been deprecated and replaced by ccsFlapGroupRev2."
  },
  "ccsUpSpecMgmtGroupRev1": {
    "name": "ccsUpSpecMgmtGroupRev1",
    "oid": "1.3.6.1.4.1.9.9.114.3.2.6",
    "class": "objectgroup",
    "objects": [
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtHopPriority"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtSnrThres1"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtSnrThres2"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtFecCorrectThres1"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtFecCorrectThres2"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtFecUnCorrectThres1"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtFecUnCorrectThres2"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtHopCondition"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtFromCenterFreq"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtToCenterFreq"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtFromBandWidth"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtToBandWidth"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtFromModProfile"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtToModProfile"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtSNR"
      }
    ],
    "status": "deprecated",
    "description": "Group of objects implemented in Cable Modem Termination Systems for configuring cable upstream interface attributes which are used to increase the performance and proactive hopping. This object group has been deprecated and replaced by ccsUpSpecMgmtGroupRev2."
  },
  "ccsFlapGroupRev2": {
    "name": "ccsFlapGroupRev2",
    "oid": "1.3.6.1.4.1.9.9.114.3.2.7",
    "class": "objectgroup",
    "objects": [
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsFlapListMaxSize"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsFlapListCurrentSize"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsFlapAging"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsFlapInsertionTime"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsCmFlapLastFlapTime"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsCmFlapCreateTime"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsCmFlapInsertionFailNum"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsCmFlapHitNum"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsCmFlapMissNum"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsCmFlapCrcErrorNum"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsCmFlapPowerAdjustmentNum"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsCmFlapTotalNum"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsCmFlapResetNow"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsCmFlapLastResetTime"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsCmFlapRowStatus"
      }
    ],
    "status": "current",
    "description": "Group of objects implemented in CMTS providing Flap List information."
  },
  "ccsUpSpecMgmtGroupRev2": {
    "name": "ccsUpSpecMgmtGroupRev2",
    "oid": "1.3.6.1.4.1.9.9.114.3.2.8",
    "class": "objectgroup",
    "objects": [
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtHopPriority"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtSnrThres1"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtSnrThres2"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtFecCorrectThres1"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtFecCorrectThres2"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtFecUnCorrectThres1"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtFecUnCorrectThres2"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtHopCondition"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtFromCenterFreq"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtToCenterFreq"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtFromBandWidth"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtToBandWidth"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtFromModProfile"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtToModProfile"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtSNR"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtUpperBoundFreq"
      }
    ],
    "status": "deprecated",
    "description": "Group of objects implemented in Cable Modem Termination Systems for configuring cable upstream interface attributes."
  },
  "ccsNotificationGroupRev1": {
    "name": "ccsNotificationGroupRev1",
    "oid": "1.3.6.1.4.1.9.9.114.3.2.9",
    "class": "notificationgroup",
    "objects": [
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsSpecMgmtNotification"
      }
    ],
    "status": "current",
    "description": "The notification which a CISCO-CABLE-SPECTRUM-MIB entity is required to implement."
  },
  "ccsUpSpecMgmtGroupRev3": {
    "name": "ccsUpSpecMgmtGroupRev3",
    "oid": "1.3.6.1.4.1.9.9.114.3.2.10",
    "class": "objectgroup",
    "objects": [
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtHopPriority"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtSnrThres1"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtSnrThres2"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtFecCorrectThres1"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtFecUnCorrectThres1"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtFecUnCorrectThres2"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtFromCenterFreq"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtToCenterFreq"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtFromBandWidth"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtToBandWidth"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtFromModProfile"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtToModProfile"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtSNR"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtUpperBoundFreq"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtCnrThres1"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtCnrThres2"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtCNR"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtMissedMaintMsgThres"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtHopPeriod"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtCriteria"
      }
    ],
    "status": "deprecated",
    "description": "Group of objects implemented in Cable Modem Termination Systems for configuring cable upstream interface attributes."
  },
  "ccsSpecGroupFreqGroup": {
    "name": "ccsSpecGroupFreqGroup",
    "oid": "1.3.6.1.4.1.9.9.114.3.2.11",
    "class": "objectgroup",
    "objects": [
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsSpecGroupFreqType"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsSpecGroupFreqLower"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsSpecGroupFreqUpper"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsSpecGroupStorage"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsSpecGroupRowStatus"
      }
    ],
    "status": "current",
    "description": "Global spectrum group frequency / band definition."
  },
  "ccsUpSpecMgmtGroupRev4": {
    "name": "ccsUpSpecMgmtGroupRev4",
    "oid": "1.3.6.1.4.1.9.9.114.3.2.12",
    "class": "objectgroup",
    "objects": [
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtHopPriority"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtSnrThres1"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtSnrThres2"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtFecCorrectThres1"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtFecUnCorrectThres1"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtFecUnCorrectThres2"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtFromCenterFreq"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtToCenterFreq"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtFromBandWidth"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtToBandWidth"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtFromModProfile"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtToModProfile"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtSNR"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtUpperBoundFreq"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtCnrThres1"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtCnrThres2"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtCNR"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtMissedMaintMsgThres"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtHopPeriod"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtCriteria"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtSpecGroup"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsUpSpecMgmtSharedSpectrum"
      }
    ],
    "status": "current",
    "description": "Group of objects implemented in Cable Modem Termination Systems for configuring cable upstream interface attributes."
  },
  "ccsUpInSpecGroupGroup": {
    "name": "ccsUpInSpecGroupGroup",
    "oid": "1.3.6.1.4.1.9.9.114.3.2.13",
    "class": "objectgroup",
    "objects": [
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsSpecGroupUpstreamStorage"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsSpecGroupUpstreamRowStatus"
      }
    ],
    "status": "current",
    "description": "Group of objects to populate all cable upstream interfaces in spectrum group."
  },
  "ccsUpInFiberNodeGroup": {
    "name": "ccsUpInFiberNodeGroup",
    "oid": "1.3.6.1.4.1.9.9.114.3.2.14",
    "class": "objectgroup",
    "objects": [
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsFiberNodeUpstreamStorage"
      },
      {
        "module": "CISCO-CABLE-SPECTRUM-MIB",
        "object": "ccsFiberNodeUpstreamRowStatus"
      }
    ],
    "status": "current",
    "description": "Group of objects to populate all cable upstream interfaces in fiber-node."
  },
  "meta": {
    "comments": [
      "ASN.1 source file:///Users/neermitt/kusanagi/mibs.snmplabs.com/asn1/CISCO-CABLE-SPECTRUM-MIB",
      "Produced by pysmi-0.3.4 at Fri May 24 16:55:58 2019",
      "On host NEERMITT-M-J0NV platform Darwin version 18.6.0 by user neermitt",
      "Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) "
    ],
    "module": "CISCO-CABLE-SPECTRUM-MIB"
  }
}