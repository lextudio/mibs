{
  "imports": {
    "class": "imports",
    "CIENA-WS-MIB": [
      "cienaWsConfig"
    ],
    "SNMPv2-CONF": [
      "OBJECT-GROUP",
      "NOTIFICATION-GROUP",
      "MODULE-COMPLIANCE"
    ],
    "SNMPv2-SMI": [
      "TimeTicks",
      "OBJECT-IDENTITY",
      "Counter64",
      "MODULE-IDENTITY",
      "NOTIFICATION-TYPE",
      "OBJECT-TYPE",
      "Bits",
      "iso",
      "Counter32",
      "Gauge32",
      "MibIdentifier",
      "IpAddress",
      "Unsigned32",
      "Integer32"
    ],
    "SNMPv2-TC": [
      "DisplayString",
      "TEXTUAL-CONVENTION"
    ]
  },
  "cienaWsTypedefsMIB": {
    "name": "cienaWsTypedefsMIB",
    "oid": "1.3.6.1.4.1.1271.3.4.13",
    "class": "moduleidentity",
    "revisions": [
      {
        "revision": "2016-12-12 00:00",
        "description": "Waveserver Rel 1.3 revised. Updated enum definition for typedef connector-type-desc-enum to remove the parentheses in some enum names. Added typedef decimal-3-dig. Added typedef decimal-2-dig-small. Added range statement for decimal-1-dig, decimal-2-dig and decimal-3-dig"
      },
      {
        "revision": "2016-03-03 00:00",
        "description": "Waveserver Rel 1.1 revised. Modified range of typedef 'tx-power-lvl'."
      },
      {
        "revision": "2015-02-25 00:00",
        "description": "Initial version."
      }
    ],
    "lastupdated": "201612120000Z",
    "organization": "Ciena Corporation",
    "contactinfo": "Web URL: http://www.ciena.com/ Postal: 7035 Ridge Road Hanover, Maryland 21076 U.S.A. Phone: +1 800-921-1144 Fax: +1 410-694-5750",
    "description": "This YANG module defines Ciena's commonly used typedefs"
  },
  "ChannelsNumber": {
    "name": "ChannelsNumber",
    "class": "textualconvention",
    "type": {
      "type": "Unsigned32",
      "class": "type"
    },
    "status": "current",
    "description": "Channel number common type, channel range are defined from 0 to 4."
  },
  "ConnectorTypeDescEnum": {
    "name": "ConnectorTypeDescEnum",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "unknownorunspecified": 0,
          "sc": 1,
          "fibrechannelstyle1copperconnector": 2,
          "fibrechannelstyle2copperconnector": 3,
          "bnc": 4,
          "fibrechannelcoaxheaders": 5,
          "fiberjack": 6,
          "lc": 7,
          "mtrj": 8,
          "mu": 9,
          "sg": 10,
          "opticalpigtail": 11,
          "mpo1x12": 12,
          "mpo2x16": 13,
          "hssdcii": 32,
          "copperpigtail": 33,
          "rj45": 34,
          "noseparableconnector": 35,
          "mxc2x16": 36
        }
      }
    },
    "status": "current",
    "description": "Human readable description of Vendor's connector type byte value. Reference SFF-8024, table 4-3"
  },
  "Decimal1Dig": {
    "name": "Decimal1Dig",
    "class": "textualconvention",
    "type": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": -2147483640,
            "max": 2147483640
          }
        ]
      }
    },
    "displayhint": "d-1",
    "status": "current",
    "description": "Decimal value up to 1 digits."
  },
  "Decimal2Dig": {
    "name": "Decimal2Dig",
    "class": "textualconvention",
    "type": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": -2147483600,
            "max": 2147483600
          }
        ]
      }
    },
    "displayhint": "d-2",
    "status": "current",
    "description": "Decimal value up to 2 digits."
  },
  "Decimal2DigSmall": {
    "name": "Decimal2DigSmall",
    "class": "textualconvention",
    "type": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": -3000000,
            "max": 3000000
          }
        ]
      }
    },
    "displayhint": "d-2",
    "status": "current",
    "description": "Decimal value up to 2 digits."
  },
  "Decimal3Dig": {
    "name": "Decimal3Dig",
    "class": "textualconvention",
    "type": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": -2147483000,
            "max": 2147483000
          }
        ]
      }
    },
    "displayhint": "d-3",
    "status": "current",
    "description": "Decimal value up to 3 digits."
  },
  "DescriptionString": {
    "name": "DescriptionString",
    "class": "textualconvention",
    "type": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 128
          }
        ]
      }
    },
    "displayhint": "128a",
    "status": "current",
    "description": "String type for description used in Ciena defined modules. Max length of 128 characters, plus null. "
  },
  "EnabledDisabledEnum": {
    "name": "EnabledDisabledEnum",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "disabled": 0,
          "enabled": 1
        }
      }
    },
    "status": "current",
    "description": "Enabled and Disabled enum toggle used in Ciena defined modules."
  },
  "EnabledDisabledNaEnum": {
    "name": "EnabledDisabledNaEnum",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "disabled": 0,
          "enabled": 1,
          "na": 2
        }
      }
    },
    "status": "current",
    "description": "Enabled, Disabled, and not-applicable enum used in Ciena defined modules."
  },
  "EnhancedOptsEnum": {
    "name": "EnhancedOptsEnum",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "na": 0,
          "yes": 1,
          "no": 2
        }
      }
    },
    "status": "current",
    "description": "None"
  },
  "LicenseStatusEnum": {
    "name": "LicenseStatusEnum",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "notcompliant": 0,
          "compliant": 1
        }
      }
    },
    "status": "current",
    "description": "None"
  },
  "LineModuleTypeBits": {
    "name": "LineModuleTypeBits",
    "class": "textualconvention",
    "type": {
      "type": "Bits",
      "class": "type",
      "bits": {
        "wl3eline": 0
      }
    },
    "status": "current",
    "description": "None"
  },
  "LineSysEnum": {
    "name": "LineSysEnum",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "coloured": 0,
          "colourless": 1,
          "contentionless": 2,
          "cscolored": 3,
          "cscolorless": 4
        }
      }
    },
    "status": "current",
    "description": "None"
  },
  "MacString": {
    "name": "MacString",
    "class": "textualconvention",
    "type": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 1,
            "max": 20
          }
        ]
      }
    },
    "displayhint": "20a",
    "status": "current",
    "description": "MAC address string."
  },
  "ModemChannel": {
    "name": "ModemChannel",
    "class": "textualconvention",
    "type": {
      "type": "Integer32",
      "class": "type"
    },
    "status": "current",
    "description": "Modem channel value."
  },
  "ModemFrequency": {
    "name": "ModemFrequency",
    "class": "textualconvention",
    "type": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": -2147483640,
            "max": 2147483640
          }
        ]
      }
    },
    "displayhint": "d-1",
    "status": "current",
    "description": "Modem frequency, in GHz."
  },
  "ModuleTypeBits": {
    "name": "ModuleTypeBits",
    "class": "textualconvention",
    "type": {
      "type": "Bits",
      "class": "type",
      "bits": {
        "integrated": 0,
        "fieldreplaceable": 1
      }
    },
    "status": "current",
    "description": "None"
  },
  "ModuleTypeEnum": {
    "name": "ModuleTypeEnum",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "unknown": 0,
          "integrated": 1,
          "fieldreplaceable": 2
        }
      }
    },
    "status": "current",
    "description": "None"
  },
  "NameString": {
    "name": "NameString",
    "class": "textualconvention",
    "type": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 1,
            "max": 32
          }
        ]
      }
    },
    "displayhint": "32a",
    "status": "current",
    "description": "String type for object names used in Ciena defined modules. It must be a non empty string that is at most 32 characters long."
  },
  "OnOffEnum": {
    "name": "OnOffEnum",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "off": 0,
          "on": 1
        }
      }
    },
    "status": "current",
    "description": "Off and On enum toggle used in Ciena defined modules."
  },
  "PortId": {
    "name": "PortId",
    "class": "textualconvention",
    "type": {
      "type": "Unsigned32",
      "class": "type"
    },
    "status": "current",
    "description": "Logical port id that uniquely identifies a port."
  },
  "PortName": {
    "name": "PortName",
    "class": "textualconvention",
    "type": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 1,
            "max": 32
          }
        ]
      }
    },
    "displayhint": "32a",
    "status": "current",
    "description": "None"
  },
  "PtpId": {
    "name": "PtpId",
    "class": "textualconvention",
    "type": {
      "type": "Unsigned32",
      "class": "type"
    },
    "status": "current",
    "description": "PTP ID"
  },
  "RecoverLinkDispersionType": {
    "name": "RecoverLinkDispersionType",
    "class": "textualconvention",
    "type": {
      "type": "Integer32",
      "class": "type"
    },
    "status": "current",
    "description": "Value for Fast Receiver Recovery Path Link Dispersion. 100000 means Auto."
  },
  "ServiceDomainIdx": {
    "name": "ServiceDomainIdx",
    "class": "textualconvention",
    "type": {
      "type": "Unsigned32",
      "class": "type"
    },
    "status": "current",
    "description": "Service Domain Index"
  },
  "ServiceIdx": {
    "name": "ServiceIdx",
    "class": "textualconvention",
    "type": {
      "type": "Unsigned32",
      "class": "type"
    },
    "status": "current",
    "description": "Service Index"
  },
  "StringMaxl128": {
    "name": "StringMaxl128",
    "class": "textualconvention",
    "type": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 128
          }
        ]
      }
    },
    "displayhint": "128a",
    "status": "current",
    "description": "Standard string that has a max length of 128 characters. Can be used for various nodes that may require string of this length."
  },
  "StringMaxl16": {
    "name": "StringMaxl16",
    "class": "textualconvention",
    "type": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 16
          }
        ]
      }
    },
    "displayhint": "16a",
    "status": "current",
    "description": "Standard string that has a max length of 16 characters. Can be used for various nodes that may require string of this length."
  },
  "StringMaxl254": {
    "name": "StringMaxl254",
    "class": "textualconvention",
    "type": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 254
          }
        ]
      }
    },
    "displayhint": "254a",
    "status": "current",
    "description": "Standard string that has a max length of 254 characters. Can be used for various nodes that may require string of this length."
  },
  "StringMaxl256": {
    "name": "StringMaxl256",
    "class": "textualconvention",
    "type": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 256
          }
        ]
      }
    },
    "displayhint": "256a",
    "status": "current",
    "description": "Standard string that has a max length of 256 characters. Can be used for various nodes that may require string of this length."
  },
  "StringMaxl32": {
    "name": "StringMaxl32",
    "class": "textualconvention",
    "type": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 32
          }
        ]
      }
    },
    "displayhint": "32a",
    "status": "current",
    "description": "Standard string that has a max length of 32 characters. Can be used for various nodes that may require string of this length."
  },
  "StringMaxl50": {
    "name": "StringMaxl50",
    "class": "textualconvention",
    "type": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 50
          }
        ]
      }
    },
    "displayhint": "50a",
    "status": "current",
    "description": "Standard string that has a max length of 50 characters. Can be used for various nodes that may require string of this length."
  },
  "StringMaxl64": {
    "name": "StringMaxl64",
    "class": "textualconvention",
    "type": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 64
          }
        ]
      }
    },
    "displayhint": "64a",
    "status": "current",
    "description": "Standard string that has a max length of 64 characters. Can be used for various nodes that may require string of this length."
  },
  "StringSci": {
    "name": "StringSci",
    "class": "textualconvention",
    "type": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 32
          }
        ]
      }
    },
    "displayhint": "32a",
    "status": "current",
    "description": "String in Scientific Notation format with a max length of 32 characters."
  },
  "TxPowerLvl": {
    "name": "TxPowerLvl",
    "class": "textualconvention",
    "type": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": -2147483640,
            "max": 2147483640
          }
        ]
      }
    },
    "displayhint": "d-1",
    "status": "current",
    "description": "Modem Tx Power Level."
  },
  "UpDownEnum": {
    "name": "UpDownEnum",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "down": 0,
          "up": 1
        }
      }
    },
    "status": "current",
    "description": "Down and Up enum toggle used in Ciena defined modules."
  },
  "VendorDateString": {
    "name": "VendorDateString",
    "class": "textualconvention",
    "type": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 9
          }
        ]
      }
    },
    "displayhint": "9a",
    "status": "current",
    "description": "Vendor's manufacturing date code string, 8 characters long."
  },
  "VendorRvString": {
    "name": "VendorRvString",
    "class": "textualconvention",
    "type": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 4
          }
        ]
      }
    },
    "displayhint": "4a",
    "status": "current",
    "description": "Vendor Revision String. 2 characters."
  },
  "WlSpacing": {
    "name": "WlSpacing",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "fixed50ghz": 0,
          "fixed100ghz": 1,
          "fixed200ghz": 2,
          "flexgrid": 3
        }
      }
    },
    "status": "current",
    "description": "Wave length spacing, 50 GHz or 100 GHz. Flexigrid currently not supported."
  },
  "XcvrId": {
    "name": "XcvrId",
    "class": "textualconvention",
    "type": {
      "type": "Unsigned32",
      "class": "type"
    },
    "status": "current",
    "description": "XCVR ID"
  },
  "XcvrMode": {
    "name": "XcvrMode",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "blank": 0,
          "mode10gig": 1,
          "mode40gig": 2,
          "mode100gig": 3,
          "mode16qam": 4,
          "modeqpsk": 5,
          "mode8qam": 6
        }
      }
    },
    "status": "current",
    "description": "None"
  },
  "XcvrType": {
    "name": "XcvrType",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "notavailable": 0,
          "unsupported": 1,
          "qsfpplus": 2,
          "qsfp28": 3,
          "wavelogic3extreme": 4
        }
      }
    },
    "status": "current",
    "description": "None"
  },
  "YesNoEnum": {
    "name": "YesNoEnum",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "no": 0,
          "yes": 1
        }
      }
    },
    "status": "current",
    "description": "No and Yes enum toggle used in Ciena defined modules."
  },
  "YesNoNaEnum": {
    "name": "YesNoNaEnum",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "no": 0,
          "yes": 1,
          "na": 2
        }
      }
    },
    "status": "current",
    "description": "No and Yes enum toggle used in Ciena defined modules."
  },
  "meta": {
    "comments": [
      "ASN.1 source file:///Users/neermitt/kusanagi/mibs.snmplabs.com/asn1/CIENA-WS-TYPEDEFS-MIB",
      "Produced by pysmi-0.3.4 at Fri May 24 16:53:31 2019",
      "On host NEERMITT-M-J0NV platform Darwin version 18.6.0 by user neermitt",
      "Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) "
    ],
    "module": "CIENA-WS-TYPEDEFS-MIB"
  }
}