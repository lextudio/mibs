{
  "imports": {
    "class": "imports",
    "EXTREME-MPLS-MIB": [
      "extremeMplsMIB"
    ],
    "MPLS-TE-STD-MIB": [
      "mplsTunnelEgressLSRId",
      "mplsTunnelIndex",
      "mplsTunnelInstance",
      "mplsTunnelIngressLSRId"
    ],
    "SNMPv2-CONF": [
      "MODULE-COMPLIANCE",
      "OBJECT-GROUP",
      "NOTIFICATION-GROUP"
    ],
    "SNMPv2-SMI": [
      "MODULE-IDENTITY",
      "NOTIFICATION-TYPE",
      "OBJECT-IDENTITY",
      "TimeTicks",
      "Unsigned32",
      "Counter32",
      "Counter64",
      "IpAddress",
      "Gauge32",
      "MibIdentifier",
      "iso",
      "OBJECT-TYPE",
      "Bits",
      "Integer32"
    ],
    "SNMPv2-TC": [
      "TEXTUAL-CONVENTION",
      "DisplayString"
    ]
  },
  "extremeMplsTeMIB": {
    "name": "extremeMplsTeMIB",
    "oid": "1.3.6.1.4.1.1916.1.37.2",
    "class": "moduleidentity",
    "lastupdated": "200907040000Z",
    "organization": "Extreme Networks, Inc.",
    "contactinfo": "www.extremenetworks.com",
    "description": "Extreme extensions to mplsTeStdMIB"
  },
  "extremeMplsTeScalars": {
    "name": "extremeMplsTeScalars",
    "oid": "1.3.6.1.4.1.1916.1.37.2.1",
    "class": "objectidentity"
  },
  "extremeMplsTeObjects": {
    "name": "extremeMplsTeObjects",
    "oid": "1.3.6.1.4.1.1916.1.37.2.2",
    "class": "objectidentity"
  },
  "extremeMplsTeConformance": {
    "name": "extremeMplsTeConformance",
    "oid": "1.3.6.1.4.1.1916.1.37.2.3",
    "class": "objectidentity"
  },
  "extremeMplsTunnelTable": {
    "name": "extremeMplsTunnelTable",
    "oid": "1.3.6.1.4.1.1916.1.37.2.2.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "The mplsTunnelTable (see RFC 3812) allows new MPLS tunnels to be created between an LSR and a remote endpoint, and existing tunnels to be reconfigured or removed. Note that only point-to-point tunnel segments are supported, although multipoint-to-point and point- to-multipoint connections are supported by an LSR acting as a cross-connect. Each MPLS tunnel can thus have one out-segment originating at this LSR and/or one in-segment terminating at this LSR. Extreme Networks MPLS implementation allows tunnel instances with a common endpoint to be grouped at the ingress LSR to provide redundancy. The role of each tunnel in the group must be configured and is indicated by extremeMplsTunnelRedundancyType. The failover to a redundant tunnel is implementation dependent."
  },
  "extremeMplsTunnelEntry": {
    "name": "extremeMplsTunnelEntry",
    "oid": "1.3.6.1.4.1.1916.1.37.2.2.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "MPLS-TE-STD-MIB",
        "object": "mplsTunnelIndex",
        "implied": 0
      },
      {
        "module": "MPLS-TE-STD-MIB",
        "object": "mplsTunnelInstance",
        "implied": 0
      },
      {
        "module": "MPLS-TE-STD-MIB",
        "object": "mplsTunnelIngressLSRId",
        "implied": 0
      },
      {
        "module": "MPLS-TE-STD-MIB",
        "object": "mplsTunnelEgressLSRId",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry in this table represents an extension to an MPLS tunnel reported in the mplsTunnelTable (see RFC 3812). An entry can be created by a network administrator or by an SNMP agent as instructed by an MPLS signalling protocol. An entry in this table displays an ingress tunnel only since the tunnel type is a configured value at the local node and is not exchanged by the signalling protocol."
  },
  "mplsTunnelRedundancyType": {
    "name": "mplsTunnelRedundancyType",
    "oid": "1.3.6.1.4.1.1916.1.37.2.2.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "primary": 1,
          "secondary": 2
        }
      }
    },
    "default": {
      "default": {
        "value": "primary",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Identifies the tunnel redundancy type associated with this tunnel instance. A value of primary(1) or secondary(2) MAY be assigned by the network administrator or by an SNMP manager at the time of setting up the tunnel."
  },
  "mplsTunnelRedundancyStatus": {
    "name": "mplsTunnelRedundancyStatus",
    "oid": "1.3.6.1.4.1.1916.1.37.2.2.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "active": 1,
          "standby": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Indicates the actual redundancy status of this tunnel. When the status is active, the tunnel is the preferred tunnel in the group."
  },
  "mplsTunnelTransportStatus": {
    "name": "mplsTunnelTransportStatus",
    "oid": "1.3.6.1.4.1.1916.1.37.2.2.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Bits",
      "class": "type",
      "bits": {
        "allowAllIp": 0,
        "allowAssignedIpOnly": 1,
        "allowAllLayer2Vpn": 2,
        "allowAsignedLayer2VpnOnly": 3
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Indicates the type of traffic the tunnel group can be used for sending. When the allowAllIp(0) bit is set, IP traffic destined for all IPv4 routes will be allowed over any tunnel in the group marked active. When the allowAssignedIpOnly(1) bit is set, IP traffic destined only for IPv4 static routes that have been explicitly configured to use this tunnel group will be allowed. When the allowAllLayer2Vpn(2) bit is set, layer 2 VPN traffic for all layer 2 VPNs will be allowed over any tunnel in the group marked active. When the allowAssignedLayer2VpnOnly(3) bit is set, layer 2 VPN traffic destined only for pseudo-wires that have been explicitly configured to use this tunnel group will be allowed."
  },
  "meta": {
    "comments": [
      "ASN.1 source file:///Users/neermitt/kusanagi/mibs.snmplabs.com/asn1/EXTREME-MPLS-TE-MIB",
      "Produced by pysmi-0.3.4 at Fri May 24 18:35:33 2019",
      "On host NEERMITT-M-J0NV platform Darwin version 18.6.0 by user neermitt",
      "Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) "
    ],
    "module": "EXTREME-MPLS-TE-MIB"
  }
}