{
  "imports": {
    "class": "imports",
    "IANA-MAU-MIB": [
      "IANAifMauTypeListBits",
      "IANAifMauAutoNegCapBits",
      "IANAifJackType",
      "IANAifMauMediaAvailable"
    ],
    "IF-MIB": [
      "InterfaceIndex"
    ],
    "SNMPv2-CONF": [
      "MODULE-COMPLIANCE",
      "NOTIFICATION-GROUP",
      "OBJECT-GROUP"
    ],
    "SNMPv2-SMI": [
      "IpAddress",
      "Unsigned32",
      "Gauge32",
      "Bits",
      "MibIdentifier",
      "iso",
      "MODULE-IDENTITY",
      "NOTIFICATION-TYPE",
      "TimeTicks",
      "Counter32",
      "mib-2",
      "OBJECT-IDENTITY",
      "Integer32",
      "Counter64",
      "OBJECT-TYPE"
    ],
    "SNMPv2-TC": [
      "DisplayString",
      "AutonomousType",
      "TEXTUAL-CONVENTION",
      "TruthValue"
    ]
  },
  "mauMod": {
    "name": "mauMod",
    "oid": "1.3.6.1.2.1.26.6",
    "class": "moduleidentity",
    "revisions": [
      {
        "revision": "2007-04-21 00:00",
        "description": "Updated to reference IANA maintaned textual conventions for MAU types, Media Availability state, Auto Negotiation capabilities, and jack types, instead of using internally defined values. This version is published as RFC 4836."
      },
      {
        "revision": "2003-09-19 00:00",
        "description": "Updated to include support for 10 Gb/s MAUs. This resulted in the following revisions: - Added OBJECT-IDENTITY definitions for 10 gigabit MAU types - Added fiberLC jack type to JackType TC - Extended ifMauTypeListBits with bits for the 10 gigabit MAU types - Added enumerations to ifMauMediaAvailable, and updated its DESCRIPTION to reflect behaviour at 10 Gb/s - Added 64-bit version of ifMauFalseCarriers and added mauIfGrpHCStats object group to contain the new object - Deprecated mauModIfCompl2 and replaced it with mauModIfCompl3, which includes the new object group This version published as RFC 3636."
      },
      {
        "revision": "1999-08-24 04:00",
        "description": "This version published as RFC 2668. Updated to include support for 1000 Mb/sec MAUs and flow control negotiation."
      },
      {
        "revision": "1997-10-31 00:00",
        "description": "Version published as RFC 2239."
      },
      {
        "revision": "1993-09-30 00:00",
        "description": "Initial version, published as RFC 1515."
      }
    ],
    "lastupdated": "200704210000Z",
    "organization": "IETF Ethernet Interfaces and Hub MIB Working Group",
    "contactinfo": "WG charter: http://www.ietf.org/html.charters/hubmib-charter.html Mailing Lists: General Discussion: hubmib@ietf.org To Subscribe: hubmib-request@ietf.org In Body: subscribe your_email_address Chair: Bert Wijnen Postal: Alcatel-Lucent Schagen 33 3461 GL Linschoten Netherlands Phone: +31-348-407-775 EMail: bwijnen@alcatel-lucent.com Editor: Edward Beili Postal: Actelis Networks Inc. 25 Bazel St., P.O.B. 10173 Petach-Tikva 10173 Israel Tel: +972-3-924-3491 EMail: edward.beili@actelis.com",
    "description": "Management information for 802.3 MAUs. The following reference is used throughout this MIB module: [IEEE802.3] refers to: IEEE Std 802.3, 2005 Edition: 'IEEE Standard for Information technology - Telecommunications and information exchange between systems - Local and metropolitan area networks - Specific requirements - Part 3: Carrier sense multiple access with collision detection (CSMA/CD) access method and physical layer specifications'. Of particular interest is Clause 30, 'Management'. Copyright (C) The IETF Trust (2007). This version of this MIB module is part of RFC 4836; see the RFC itself for full legal notices."
  },
  "snmpDot3MauMgt": {
    "name": "snmpDot3MauMgt",
    "oid": "1.3.6.1.2.1.26",
    "class": "objectidentity"
  },
  "JackType": {
    "name": "JackType",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "rj45": 2,
          "rj45S": 3,
          "db9": 4,
          "bnc": 5,
          "fAUI": 6,
          "mAUI": 7,
          "fiberSC": 8,
          "fiberMIC": 9,
          "fiberST": 10,
          "telco": 11,
          "mtrj": 12,
          "hssdc": 13,
          "fiberLC": 14
        }
      }
    },
    "status": "deprecated",
    "description": "********* THIS TC IS DEPRECATED ********** This TC has been deprecated in favour of IANAifJackType. Common enumeration values for repeater and interface MAU jack types."
  },
  "dot3RpMauBasicGroup": {
    "name": "dot3RpMauBasicGroup",
    "oid": "1.3.6.1.2.1.26.1",
    "class": "objectidentity"
  },
  "dot3IfMauBasicGroup": {
    "name": "dot3IfMauBasicGroup",
    "oid": "1.3.6.1.2.1.26.2",
    "class": "objectidentity"
  },
  "dot3BroadMauBasicGroup": {
    "name": "dot3BroadMauBasicGroup",
    "oid": "1.3.6.1.2.1.26.3",
    "class": "objectidentity"
  },
  "dot3IfMauAutoNegGroup": {
    "name": "dot3IfMauAutoNegGroup",
    "oid": "1.3.6.1.2.1.26.5",
    "class": "objectidentity"
  },
  "rpMauTable": {
    "name": "rpMauTable",
    "oid": "1.3.6.1.2.1.26.1.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Table of descriptive and status information about the MAU(s) attached to the ports of a repeater."
  },
  "rpMauEntry": {
    "name": "rpMauEntry",
    "oid": "1.3.6.1.2.1.26.1.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "MAU-MIB",
        "object": "rpMauGroupIndex",
        "implied": 0
      },
      {
        "module": "MAU-MIB",
        "object": "rpMauPortIndex",
        "implied": 0
      },
      {
        "module": "MAU-MIB",
        "object": "rpMauIndex",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry in the table, containing information about a single MAU."
  },
  "rpMauGroupIndex": {
    "name": "rpMauGroupIndex",
    "oid": "1.3.6.1.2.1.26.1.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 2147483647
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "reference": "RFC 2108, rptrGroupIndex.",
    "status": "current",
    "description": "This variable uniquely identifies the group containing the port to which the MAU described by this entry is connected. Note: In practice, a group will generally be a field-replaceable unit (i.e., module, card, or board) that can fit in the physical system enclosure, and the group number will correspond to a number marked on the physical enclosure. The group denoted by a particular value of this object is the same as the group denoted by the same value of rptrGroupIndex."
  },
  "rpMauPortIndex": {
    "name": "rpMauPortIndex",
    "oid": "1.3.6.1.2.1.26.1.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 2147483647
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "reference": "RFC 2108, rptrPortIndex.",
    "status": "current",
    "description": "This variable uniquely identifies the repeater port within group rpMauGroupIndex to which the MAU described by this entry is connected."
  },
  "rpMauIndex": {
    "name": "rpMauIndex",
    "oid": "1.3.6.1.2.1.26.1.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 2147483647
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "reference": "[IEEE802.3], 30.5.1.1.1, aMAUID.",
    "status": "current",
    "description": "This variable uniquely identifies the MAU described by this entry from among other MAUs connected to the same port (rpMauPortIndex)."
  },
  "rpMauType": {
    "name": "rpMauType",
    "oid": "1.3.6.1.2.1.26.1.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "AutonomousType",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "[IEEE802.3], 30.5.1.1.2, aMAUType.",
    "status": "current",
    "description": "This object identifies the MAU type. Values for standard IEEE 802.3 MAU types are defined in the IANA maintained IANA-MAU-MIB module, as OBJECT-IDENTITIES of dot3MauType. If the MAU type is unknown, the object identifier zeroDotZero is returned."
  },
  "rpMauStatus": {
    "name": "rpMauStatus",
    "oid": "1.3.6.1.2.1.26.1.1.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "unknown": 2,
          "operational": 3,
          "standby": 4,
          "shutdown": 5,
          "reset": 6
        }
      }
    },
    "maxaccess": "read-write",
    "reference": "[IEEE802.3], 30.5.1.1.7, aMAUAdminState, 30.5.1.2.2, acMAUAdminControl, and 30.5.1.2.1, acResetMAU.",
    "status": "current",
    "description": "The current state of the MAU. This object MAY be implemented as a read-only object by those agents and MAUs that do not implement software control of the MAU state. Some agents may not support setting the value of this object to some of the enumerated values. The value other(1) is returned if the MAU is in a state other than one of the states 2 through 6. The value unknown(2) is returned when the MAU's true state is unknown; for example, when it is being initialized. A MAU in the operational(3) state is fully functional; it operates, and passes signals to its attached DTE or repeater port in accordance to its specification. A MAU in standby(4) state forces DI and CI to idle, and the media transmitter to idle or fault, if supported. Standby(4) mode only applies to link type MAUs. The state of rpMauMediaAvailable is unaffected. A MAU in shutdown(5) state assumes the same condition on DI, CI, and the media transmitter, as though it were powered down or not connected. The MAU MAY return other(1) value for the rpMauJabberState and rpMauMediaAvailable objects when it is in this state. For an AUI, this state will remove power from the AUI. Setting this variable to the value reset(6) resets the MAU in the same manner as a power-off, power-on cycle of at least one-half second would. The agent is not required to return the value reset(6). Setting this variable to the value operational(3), standby(4), or shutdown(5) causes the MAU to assume the respective state, except that setting a mixing-type MAU or an AUI to standby(4) will cause the MAU to enter the shutdown state."
  },
  "rpMauMediaAvailable": {
    "name": "rpMauMediaAvailable",
    "oid": "1.3.6.1.2.1.26.1.1.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IANAifMauMediaAvailable",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "[IEEE802.3], 30.5.1.1.4, aMediaAvailable.",
    "status": "current",
    "description": "This object identifies Media Available state of the MAU, complementary to the rpMauStatus. Values for the standard IEEE 802.3 Media Available states are defined in the IANA maintained IANA-MAU-MIB module, as IANAifMauMediaAvailable TC."
  },
  "rpMauMediaAvailableStateExits": {
    "name": "rpMauMediaAvailableStateExits",
    "oid": "1.3.6.1.2.1.26.1.1.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "[IEEE802.3], 30.5.1.1.5, aLoseMediaCounter. RFC 2108, rptrMonitorPortLastChange",
    "status": "current",
    "description": "A count of the number of times that rpMauMediaAvailable for this MAU instance leaves the state available(3). Discontinuities in the value of this counter can occur at re-initialization of the management system and at other times, as indicated by the value of rptrMonitorPortLastChange."
  },
  "rpMauJabberState": {
    "name": "rpMauJabberState",
    "oid": "1.3.6.1.2.1.26.1.1.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "unknown": 2,
          "noJabber": 3,
          "jabbering": 4
        }
      }
    },
    "maxaccess": "read-only",
    "reference": "[IEEE802.3], 30.5.1.1.6, aJabber.jabberFlag.",
    "status": "current",
    "description": "The value other(1) is returned if the jabber state is not 2, 3, or 4. The agent MUST always return other(1) for MAU type dot3MauTypeAUI. The value unknown(2) is returned when the MAU's true state is unknown; for example, when it is being initialized. If the MAU is not jabbering the agent returns noJabber(3). This is the 'normal' state. If the MAU is in jabber state the agent returns the jabbering(4) value."
  },
  "rpMauJabberingStateEnters": {
    "name": "rpMauJabberingStateEnters",
    "oid": "1.3.6.1.2.1.26.1.1.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "[IEEE802.3], 30.5.1.1.6, aJabber.jabberCounter. RFC 2108, rptrMonitorPortLastChange",
    "status": "current",
    "description": "A count of the number of times that mauJabberState for this MAU instance enters the state jabbering(4). For MAUs of type dot3MauTypeAUI, dot3MauType100BaseT4, dot3MauType100BaseTX, dot3MauType100BaseFX, and all 1000Mbps types, this counter will always indicate zero. Discontinuities in the value of this counter can occur at re-initialization of the management system and at other times, as indicated by the value of rptrMonitorPortLastChange."
  },
  "rpMauFalseCarriers": {
    "name": "rpMauFalseCarriers",
    "oid": "1.3.6.1.2.1.26.1.1.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "[IEEE802.3], 30.5.1.1.10, aFalseCarriers. RFC 2108, rptrMonitorPortLastChange",
    "status": "current",
    "description": "A count of the number of false carrier events during IDLE in 100BASE-X links. This counter does not increment at the symbol rate. It can increment after a valid carrier completion at a maximum rate of once per 100 ms until the next carrier event. This counter increments only for MAUs of type dot3MauType100BaseT4, dot3MauType100BaseTX, dot3MauType100BaseFX, and all 1000Mbps types. For all other MAU types, this counter will always indicate zero. The approximate minimum time for rollover of this counter is 7.4 hours. Discontinuities in the value of this counter can occur at re-initialization of the management system and at other times, as indicated by the value of rptrMonitorPortLastChange."
  },
  "rpJackTable": {
    "name": "rpJackTable",
    "oid": "1.3.6.1.2.1.26.1.2",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Information about the external jacks attached to MAUs attached to the ports of a repeater."
  },
  "rpJackEntry": {
    "name": "rpJackEntry",
    "oid": "1.3.6.1.2.1.26.1.2.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "MAU-MIB",
        "object": "rpMauGroupIndex",
        "implied": 0
      },
      {
        "module": "MAU-MIB",
        "object": "rpMauPortIndex",
        "implied": 0
      },
      {
        "module": "MAU-MIB",
        "object": "rpMauIndex",
        "implied": 0
      },
      {
        "module": "MAU-MIB",
        "object": "rpJackIndex",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry in the table, containing information about a particular jack."
  },
  "rpJackIndex": {
    "name": "rpJackIndex",
    "oid": "1.3.6.1.2.1.26.1.2.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 2147483647
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This variable uniquely identifies the jack described by this entry from among other jacks attached to the same MAU (rpMauIndex)."
  },
  "rpJackType": {
    "name": "rpJackType",
    "oid": "1.3.6.1.2.1.26.1.2.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IANAifJackType",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The jack connector type, as it appears on the outside of the system."
  },
  "ifMauTable": {
    "name": "ifMauTable",
    "oid": "1.3.6.1.2.1.26.2.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Table of descriptive and status information about MAU(s) attached to an interface."
  },
  "ifMauEntry": {
    "name": "ifMauEntry",
    "oid": "1.3.6.1.2.1.26.2.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "MAU-MIB",
        "object": "ifMauIfIndex",
        "implied": 0
      },
      {
        "module": "MAU-MIB",
        "object": "ifMauIndex",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry in the table, containing information about a single MAU."
  },
  "ifMauIfIndex": {
    "name": "ifMauIfIndex",
    "oid": "1.3.6.1.2.1.26.2.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InterfaceIndex",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "RFC 2863, ifIndex",
    "status": "current",
    "description": "This variable uniquely identifies the interface to which the MAU described by this entry is connected."
  },
  "ifMauIndex": {
    "name": "ifMauIndex",
    "oid": "1.3.6.1.2.1.26.2.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 2147483647
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "reference": "[IEEE802.3], 30.5.1.1.1, aMAUID.",
    "status": "current",
    "description": "This variable uniquely identifies the MAU described by this entry from among other MAUs connected to the same interface (ifMauIfIndex)."
  },
  "ifMauType": {
    "name": "ifMauType",
    "oid": "1.3.6.1.2.1.26.2.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "AutonomousType",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "[IEEE802.3], 30.5.1.1.2, aMAUType.",
    "status": "current",
    "description": "This object identifies the MAU type. Values for standard IEEE 802.3 MAU types are defined in the IANA maintained IANA-MAU-MIB module, as OBJECT-IDENTITIES of dot3MauType. If the MAU type is unknown, the object identifier zeroDotZero is returned. This object represents the operational type of the MAU, as determined by either 1) the result of the auto-negotiation function or 2) if auto-negotiation is not enabled or is not implemented for this MAU, by the value of the object ifMauDefaultType. In case 2), a set to the object ifMauDefaultType will force the MAU into the new operating mode."
  },
  "ifMauStatus": {
    "name": "ifMauStatus",
    "oid": "1.3.6.1.2.1.26.2.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "unknown": 2,
          "operational": 3,
          "standby": 4,
          "shutdown": 5,
          "reset": 6
        }
      }
    },
    "maxaccess": "read-write",
    "reference": "[IEEE802.3], 30.5.1.1.7, aMAUAdminState, 30.5.1.2.2, acMAUAdminControl, and 30.5.1.2.1, acResetMAU.",
    "status": "current",
    "description": "The current state of the MAU. This object MAY be implemented as a read-only object by those agents and MAUs that do not implement software control of the MAU state. Some agents may not support setting the value of this object to some of the enumerated values. The value other(1) is returned if the MAU is in a state other than one of the states 2 through 6. The value unknown(2) is returned when the MAU's true state is unknown; for example, when it is being initialized. A MAU in the operational(3) state is fully functional; it operates, and passes signals to its attached DTE or repeater port in accordance to its specification. A MAU in standby(4) state forces DI and CI to idle and the media transmitter to idle or fault, if supported. Standby(4) mode only applies to link type MAUs. The state of ifMauMediaAvailable is unaffected. A MAU in shutdown(5) state assumes the same condition on DI, CI, and the media transmitter, as though it were powered down or not connected. The MAU MAY return other(1) value for the ifMauJabberState and ifMauMediaAvailable objects when it is in this state. For an AUI, this state will remove power from the AUI. Setting this variable to the value reset(6) resets the MAU in the same manner as a power-off, power-on cycle of at least one-half second would. The agent is not required to return the value reset(6). Setting this variable to the value operational(3), standby(4), or shutdown(5) causes the MAU to assume the respective state, except that setting a mixing-type MAU or an AUI to standby(4) will cause the MAU to enter the shutdown state."
  },
  "ifMauMediaAvailable": {
    "name": "ifMauMediaAvailable",
    "oid": "1.3.6.1.2.1.26.2.1.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IANAifMauMediaAvailable",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "[IEEE802.3], 30.5.1.1.4, aMediaAvailable.",
    "status": "current",
    "description": "This object identifies Media Available state of the MAU, complementary to the ifMauStatus. Values for the standard IEEE 802.3 Media Available states are defined in the IANA maintained IANA-MAU-MIB module, as IANAifMauMediaAvailable TC."
  },
  "ifMauMediaAvailableStateExits": {
    "name": "ifMauMediaAvailableStateExits",
    "oid": "1.3.6.1.2.1.26.2.1.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "[IEEE802.3], 30.5.1.1.5, aLoseMediaCounter. RFC 2863, ifCounterDiscontinuityTime.",
    "status": "current",
    "description": "A count of the number of times that ifMauMediaAvailable for this MAU instance leaves the state available(3). Discontinuities in the value of this counter can occur at re-initialization of the management system and at other times, as indicated by the value of ifCounterDiscontinuityTime."
  },
  "ifMauJabberState": {
    "name": "ifMauJabberState",
    "oid": "1.3.6.1.2.1.26.2.1.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "unknown": 2,
          "noJabber": 3,
          "jabbering": 4
        }
      }
    },
    "maxaccess": "read-only",
    "reference": "[IEEE802.3], 30.5.1.1.6, aJabber.jabberFlag.",
    "status": "current",
    "description": "The value other(1) is returned if the jabber state is not 2, 3, or 4. The agent MUST always return other(1) for MAU type dot3MauTypeAUI. The value unknown(2) is returned when the MAU's true state is unknown; for example, when it is being initialized. If the MAU is not jabbering the agent returns noJabber(3). This is the 'normal' state. If the MAU is in jabber state the agent returns the jabbering(4) value."
  },
  "ifMauJabberingStateEnters": {
    "name": "ifMauJabberingStateEnters",
    "oid": "1.3.6.1.2.1.26.2.1.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "[IEEE802.3], 30.5.1.1.6, aJabber.jabberCounter. RFC 2863, ifCounterDiscontinuityTime.",
    "status": "current",
    "description": "A count of the number of times that mauJabberState for this MAU instance enters the state jabbering(4). This counter will always indicate zero for MAUs of type dot3MauTypeAUI and those of speeds above 10Mbps. Discontinuities in the value of this counter can occur at re-initialization of the management system and at other times, as indicated by the value of ifCounterDiscontinuityTime."
  },
  "ifMauFalseCarriers": {
    "name": "ifMauFalseCarriers",
    "oid": "1.3.6.1.2.1.26.2.1.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "[IEEE802.3], 30.5.1.1.10, aFalseCarriers. RFC 2863, ifCounterDiscontinuityTime.",
    "status": "current",
    "description": "A count of the number of false carrier events during IDLE in 100BASE-X and 1000BASE-X links. For all other MAU types, this counter will always indicate zero. This counter does not increment at the symbol rate. It can increment after a valid carrier completion at a maximum rate of once per 100 ms for 100BASE-X and once per 10us for 1000BASE-X until the next CarrierEvent. This counter can roll over very quickly. A management station is advised to poll the ifMauHCFalseCarriers instead of this counter in order to avoid loss of information. Discontinuities in the value of this counter can occur at re-initialization of the management system and at other times, as indicated by the value of ifCounterDiscontinuityTime."
  },
  "ifMauTypeList": {
    "name": "ifMauTypeList",
    "oid": "1.3.6.1.2.1.26.2.1.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "deprecated",
    "description": "********* THIS OBJECT IS DEPRECATED ********** This object has been deprecated in favour of ifMauTypeListBits. A value that uniquely identifies the set of possible IEEE 802.3 types that the MAU could be. The value is a sum that initially takes the value zero. Then, for each type capability of this MAU, 2 raised to the power noted below is added to the sum. For example, a MAU that has the capability to be only 10BASE-T would have a value of 512 (2**9). In contrast, a MAU that supports both 10Base-T (full duplex) and 100BASE-TX (full duplex) would have a value of ((2**11) + (2**16)), or 67584. The powers of 2 assigned to the capabilities are these: Power Capability 0 other or unknown 1 AUI 2 10BASE-5 3 FOIRL 4 10BASE-2 5 10BASE-T duplex mode unknown 6 10BASE-FP 7 10BASE-FB 8 10BASE-FL duplex mode unknown 9 10BROAD36 10 10BASE-T half duplex mode 11 10BASE-T full duplex mode 12 10BASE-FL half duplex mode 13 10BASE-FL full duplex mode 14 100BASE-T4 15 100BASE-TX half duplex mode 16 100BASE-TX full duplex mode 17 100BASE-FX half duplex mode 18 100BASE-FX full duplex mode 19 100BASE-T2 half duplex mode 20 100BASE-T2 full duplex mode If auto-negotiation is present on this MAU, this object will map to ifMauAutoNegCapability."
  },
  "ifMauDefaultType": {
    "name": "ifMauDefaultType",
    "oid": "1.3.6.1.2.1.26.2.1.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "AutonomousType",
      "class": "type"
    },
    "maxaccess": "read-write",
    "reference": "[IEEE802.3], 30.5.1.1.1, aMAUID, and 22.2.4.1.4.",
    "status": "current",
    "description": "This object identifies the default administrative baseband MAU type to be used in conjunction with the operational MAU type denoted by ifMauType. The set of possible values for this object is the same as the set defined for the ifMauType object. This object represents the administratively-configured type of the MAU. If auto-negotiation is not enabled or is not implemented for this MAU, the value of this object determines the operational type of the MAU. In this case, a set to this object will force the MAU into the specified operating mode. If auto-negotiation is implemented and enabled for this MAU, the operational type of the MAU is determined by auto-negotiation, and the value of this object denotes the type to which the MAU will automatically revert if/when auto-negotiation is later disabled. NOTE TO IMPLEMENTORS: It may be necessary to provide for underlying hardware implementations which do not follow the exact behavior specified above. In particular, when ifMauAutoNegAdminStatus transitions from enabled to disabled, the agent implementation MUST ensure that the operational type of the MAU (as reported by ifMauType) correctly transitions to the value specified by this object, rather than continuing to operate at the value earlier determined by the auto-negotiation function."
  },
  "ifMauAutoNegSupported": {
    "name": "ifMauAutoNegSupported",
    "oid": "1.3.6.1.2.1.26.2.1.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object indicates whether or not auto-negotiation is supported on this MAU."
  },
  "ifMauTypeListBits": {
    "name": "ifMauTypeListBits",
    "oid": "1.3.6.1.2.1.26.2.1.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IANAifMauTypeListBits",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "A value that uniquely identifies the set of possible IEEE 802.3 types that the MAU could be. If auto-negotiation is present on this MAU, this object will map to ifMauAutoNegCapabilityBits. Note that this MAU may be capable of operating as a MAU type that is beyond the scope of this MIB. This is indicated by returning the bit value bOther in addition to any bit values for standard capabilities that are listed in the IANAifMauTypeListBits TC."
  },
  "ifMauHCFalseCarriers": {
    "name": "ifMauHCFalseCarriers",
    "oid": "1.3.6.1.2.1.26.2.1.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter64",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "[IEEE802.3], 30.5.1.1.10, aFalseCarriers. RFC 2863, ifCounterDiscontinuityTime.",
    "status": "current",
    "description": "A count of the number of false carrier events during IDLE in 100BASE-X and 1000BASE-X links. For all other MAU types, this counter will always indicate zero. This counter does not increment at the symbol rate. This counter is a 64-bit version of ifMauFalseCarriers. Since the 32-bit version of this counter can roll over very quickly, management stations are advised to poll the 64-bit version instead, in order to avoid loss of information. Discontinuities in the value of this counter can occur at re-initialization of the management system and at other times, as indicated by the value of ifCounterDiscontinuityTime."
  },
  "ifJackTable": {
    "name": "ifJackTable",
    "oid": "1.3.6.1.2.1.26.2.2",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Information about the external jacks attached to MAUs attached to an interface."
  },
  "ifJackEntry": {
    "name": "ifJackEntry",
    "oid": "1.3.6.1.2.1.26.2.2.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "MAU-MIB",
        "object": "ifMauIfIndex",
        "implied": 0
      },
      {
        "module": "MAU-MIB",
        "object": "ifMauIndex",
        "implied": 0
      },
      {
        "module": "MAU-MIB",
        "object": "ifJackIndex",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry in the table, containing information about a particular jack."
  },
  "ifJackIndex": {
    "name": "ifJackIndex",
    "oid": "1.3.6.1.2.1.26.2.2.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 2147483647
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This variable uniquely identifies the jack described by this entry from among other jacks attached to the same MAU."
  },
  "ifJackType": {
    "name": "ifJackType",
    "oid": "1.3.6.1.2.1.26.2.2.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IANAifJackType",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The jack connector type, as it appears on the outside of the system."
  },
  "ifMauAutoNegTable": {
    "name": "ifMauAutoNegTable",
    "oid": "1.3.6.1.2.1.26.5.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Configuration and status objects for the auto-negotiation function of MAUs attached to interfaces. The ifMauAutoNegTable applies to systems in which auto-negotiation is supported on one or more MAUs attached to interfaces. Note that if auto-negotiation is present and enabled, the ifMauType object reflects the result of the auto-negotiation function."
  },
  "ifMauAutoNegEntry": {
    "name": "ifMauAutoNegEntry",
    "oid": "1.3.6.1.2.1.26.5.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "MAU-MIB",
        "object": "ifMauIfIndex",
        "implied": 0
      },
      {
        "module": "MAU-MIB",
        "object": "ifMauIndex",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry in the table, containing configuration and status information for the auto-negotiation function of a particular MAU."
  },
  "ifMauAutoNegAdminStatus": {
    "name": "ifMauAutoNegAdminStatus",
    "oid": "1.3.6.1.2.1.26.5.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2
        }
      }
    },
    "maxaccess": "read-write",
    "reference": "[IEEE802.3], 30.6.1.1.2, aAutoNegAdminState, and 30.6.1.2.2, acAutoNegAdminControl.",
    "status": "current",
    "description": "Setting this object to enabled(1) will cause the interface that has the auto-negotiation signaling ability to be enabled. If the value of this object is disabled(2) then the interface will act as it would if it had no auto-negotiation signaling. Under these conditions, an IEEE 802.3 MAU will immediately be forced to the state indicated by the value of the object ifMauDefaultType. NOTE TO IMPLEMENTORS: When ifMauAutoNegAdminStatus transitions from enabled to disabled, the agent implementation MUST ensure that the operational type of the MAU (as reported by ifMauType) correctly transitions to the value specified by the ifMauDefaultType object, rather than continuing to operate at the value earlier determined by the auto-negotiation function."
  },
  "ifMauAutoNegRemoteSignaling": {
    "name": "ifMauAutoNegRemoteSignaling",
    "oid": "1.3.6.1.2.1.26.5.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "detected": 1,
          "notdetected": 2
        }
      }
    },
    "maxaccess": "read-only",
    "reference": "[IEEE802.3], 30.6.1.1.3, aAutoNegRemoteSignaling.",
    "status": "current",
    "description": "A value indicating whether the remote end of the link is using auto-negotiation signaling. It takes the value detected(1) if and only if, during the previous link negotiation, FLP Bursts were received."
  },
  "ifMauAutoNegConfig": {
    "name": "ifMauAutoNegConfig",
    "oid": "1.3.6.1.2.1.26.5.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "configuring": 2,
          "complete": 3,
          "disabled": 4,
          "parallelDetectFail": 5
        }
      }
    },
    "maxaccess": "read-only",
    "reference": "[IEEE802.3], 30.6.1.1.4, aAutoNegAutoConfig.",
    "status": "current",
    "description": "A value indicating the current status of the auto-negotiation process. The enumeration parallelDetectFail(5) maps to a failure in parallel detection as defined in 28.2.3.1 of [IEEE802.3]."
  },
  "ifMauAutoNegCapability": {
    "name": "ifMauAutoNegCapability",
    "oid": "1.3.6.1.2.1.26.5.1.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "[IEEE802.3], 30.6.1.1.5, aAutoNegLocalTechnologyAbility.",
    "status": "deprecated",
    "description": "********* THIS OBJECT IS DEPRECATED ********** This object has been deprecated in favour of ifMauAutoNegCapabilityBits. A value that uniquely identifies the set of capabilities of the local auto-negotiation entity. The value is a sum that initially takes the value zero. Then, for each capability of this interface, 2 raised to the power noted below is added to the sum. For example, an interface that has the capability to support only 100Base-TX half duplex would have a value of 32768 (2**15). In contrast, an interface that supports both 100Base-TX half duplex and 100Base-TX full duplex would have a value of 98304 ((2**15) + (2**16)). The powers of 2 assigned to the capabilities are these: Power Capability 0 other or unknown (1-9) (reserved) 10 10BASE-T half duplex mode 11 10BASE-T full duplex mode 12 (reserved) 13 (reserved) 14 100BASE-T4 15 100BASE-TX half duplex mode 16 100BASE-TX full duplex mode 17 (reserved) 18 (reserved) 19 100BASE-T2 half duplex mode 20 100BASE-T2 full duplex mode Note that interfaces that support this MIB may have capabilities that extend beyond the scope of this MIB."
  },
  "ifMauAutoNegCapAdvertised": {
    "name": "ifMauAutoNegCapAdvertised",
    "oid": "1.3.6.1.2.1.26.5.1.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "reference": "[IEEE802.3], 30.6.1.1.6, aAutoNegAdvertisedTechnologyAbility.",
    "status": "deprecated",
    "description": "********* THIS OBJECT IS DEPRECATED ********** This object has been deprecated in favour of ifMauAutoNegCapAdvertisedBits. A value that uniquely identifies the set of capabilities advertised by the local auto-negotiation entity. Refer to ifMauAutoNegCapability for a description of the possible values of this object. Capabilities in this object that are not available in ifMauAutoNegCapability cannot be enabled."
  },
  "ifMauAutoNegCapReceived": {
    "name": "ifMauAutoNegCapReceived",
    "oid": "1.3.6.1.2.1.26.5.1.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "[IEEE802.3], 30.6.1.1.7, aAutoNegReceivedTechnologyAbility.",
    "status": "deprecated",
    "description": "********* THIS OBJECT IS DEPRECATED ********** This object has been deprecated in favour of ifMauAutoNegCapReceivedBits. A value that uniquely identifies the set of capabilities received from the remote auto-negotiation entity. Refer to ifMauAutoNegCapability for a description of the possible values of this object. Note that interfaces that support this MIB may be attached to remote auto-negotiation entities that have capabilities beyond the scope of this MIB."
  },
  "ifMauAutoNegRestart": {
    "name": "ifMauAutoNegRestart",
    "oid": "1.3.6.1.2.1.26.5.1.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "restart": 1,
          "norestart": 2
        }
      }
    },
    "maxaccess": "read-write",
    "reference": "[IEEE802.3], 30.6.1.2.1, acAutoNegRestartAutoConfig.",
    "status": "current",
    "description": "If the value of this object is set to restart(1) then this will force auto-negotiation to begin link renegotiation. If auto-negotiation signaling is disabled, a write to this object has no effect. Setting the value of this object to norestart(2) has no effect."
  },
  "ifMauAutoNegCapabilityBits": {
    "name": "ifMauAutoNegCapabilityBits",
    "oid": "1.3.6.1.2.1.26.5.1.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IANAifMauAutoNegCapBits",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "[IEEE802.3], 30.6.1.1.5, aAutoNegLocalTechnologyAbility.",
    "status": "current",
    "description": "A value that uniquely identifies the set of capabilities of the local auto-negotiation entity. Note that interfaces that support this MIB may have capabilities that extend beyond the scope of this MIB. Note that the local auto-negotiation entity may support some capabilities beyond the scope of this MIB. This is indicated by returning the bit value bOther in addition to any bit values for standard capabilities that are listed in the IANAifMauAutoNegCapBits TC."
  },
  "ifMauAutoNegCapAdvertisedBits": {
    "name": "ifMauAutoNegCapAdvertisedBits",
    "oid": "1.3.6.1.2.1.26.5.1.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IANAifMauAutoNegCapBits",
      "class": "type"
    },
    "maxaccess": "read-write",
    "reference": "[IEEE802.3], 30.6.1.1.6, aAutoNegAdvertisedTechnologyAbility.",
    "status": "current",
    "description": "A value that uniquely identifies the set of capabilities advertised by the local auto-negotiation entity. Capabilities in this object that are not available in ifMauAutoNegCapabilityBits cannot be enabled. Note that the local auto-negotiation entity may advertise some capabilities beyond the scope of this MIB. This is indicated by returning the bit value bOther in addition to any bit values for standard capabilities that are listed in the IANAifMauAutoNegCapBits TC."
  },
  "ifMauAutoNegCapReceivedBits": {
    "name": "ifMauAutoNegCapReceivedBits",
    "oid": "1.3.6.1.2.1.26.5.1.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IANAifMauAutoNegCapBits",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "[IEEE802.3], 30.6.1.1.7, aAutoNegReceivedTechnologyAbility.",
    "status": "current",
    "description": "A value that uniquely identifies the set of capabilities received from the remote auto-negotiation entity. Note that interfaces that support this MIB may be attached to remote auto-negotiation entities that have capabilities beyond the scope of this MIB. This is indicated by returning the bit value bOther in addition to any bit values for standard capabilities that are listed in the IANAifMauAutoNegCapBits TC."
  },
  "ifMauAutoNegRemoteFaultAdvertised": {
    "name": "ifMauAutoNegRemoteFaultAdvertised",
    "oid": "1.3.6.1.2.1.26.5.1.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "noError": 1,
          "offline": 2,
          "linkFailure": 3,
          "autoNegError": 4
        }
      }
    },
    "maxaccess": "read-write",
    "reference": "[IEEE802.3], 30.6.1.1.6, aAutoNegAdvertisedTechnologyAbility.",
    "status": "current",
    "description": "A value that identifies any local fault indications that this MAU has detected and will advertise at the next auto-negotiation interaction for 1000Mbps MAUs."
  },
  "ifMauAutoNegRemoteFaultReceived": {
    "name": "ifMauAutoNegRemoteFaultReceived",
    "oid": "1.3.6.1.2.1.26.5.1.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "noError": 1,
          "offline": 2,
          "linkFailure": 3,
          "autoNegError": 4
        }
      }
    },
    "maxaccess": "read-only",
    "reference": "[IEEE802.3], 30.6.1.1.7, aAutoNegReceivedTechnologyAbility.",
    "status": "current",
    "description": "A value that identifies any fault indications received from the far end of a link by the local auto-negotiation entity for 1000Mbps MAUs."
  },
  "broadMauBasicTable": {
    "name": "broadMauBasicTable",
    "oid": "1.3.6.1.2.1.26.3.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "deprecated",
    "description": "********* THIS OBJECT IS DEPRECATED ********** This entire table has been deprecated. There have been no reported implementations of this table, and it is unlikely that there ever will be. IEEE recommends that broadband MAU types should not be used for new installations. Table of descriptive and status information about the broadband MAUs connected to interfaces."
  },
  "broadMauBasicEntry": {
    "name": "broadMauBasicEntry",
    "oid": "1.3.6.1.2.1.26.3.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "MAU-MIB",
        "object": "broadMauIfIndex",
        "implied": 0
      },
      {
        "module": "MAU-MIB",
        "object": "broadMauIndex",
        "implied": 0
      }
    ],
    "status": "deprecated",
    "description": "********* THIS OBJECT IS DEPRECATED ********** An entry in the table, containing information about a single broadband MAU."
  },
  "broadMauIfIndex": {
    "name": "broadMauIfIndex",
    "oid": "1.3.6.1.2.1.26.3.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InterfaceIndex",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "RFC 2863, ifIndex.",
    "status": "deprecated",
    "description": "********* THIS OBJECT IS DEPRECATED ********** This variable uniquely identifies the interface to which the MAU described by this entry is connected."
  },
  "broadMauIndex": {
    "name": "broadMauIndex",
    "oid": "1.3.6.1.2.1.26.3.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 2147483647
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "reference": "[IEEE802.3], 30.5.1.1.1, aMAUID.",
    "status": "deprecated",
    "description": "********* THIS OBJECT IS DEPRECATED ********** This variable uniquely identifies the MAU connected to interface broadMauIfIndex that is described by this entry."
  },
  "broadMauXmtRcvSplitType": {
    "name": "broadMauXmtRcvSplitType",
    "oid": "1.3.6.1.2.1.26.3.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "single": 2,
          "dual": 3
        }
      }
    },
    "maxaccess": "read-only",
    "reference": "[IEEE802.3], 30.5.1.1.8, aBbMAUXmitRcvSplitType.",
    "status": "deprecated",
    "description": "********* THIS OBJECT IS DEPRECATED ********** This object indicates the type of frequency multiplexing/cabling system used to separate the transmit and receive paths for the 10BROAD36 MAU. The value other(1) is returned if the split type is not either single or dual. The value single(2) indicates a single cable system. The value dual(3) indicates a dual cable system, offset normally zero."
  },
  "broadMauXmtCarrierFreq": {
    "name": "broadMauXmtCarrierFreq",
    "oid": "1.3.6.1.2.1.26.3.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "[IEEE802.3], 30.5.1.1.9, aBroadbandFrequencies.xmitCarrierFrequency.",
    "status": "deprecated",
    "description": "********* THIS OBJECT IS DEPRECATED ********** This variable indicates the transmit carrier frequency of the 10BROAD36 MAU in MHz/4; that is, in units of 250 kHz."
  },
  "broadMauTranslationFreq": {
    "name": "broadMauTranslationFreq",
    "oid": "1.3.6.1.2.1.26.3.1.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "[IEEE802.3], 30.5.1.1.9, aBroadbandFrequencies.translationFrequency.",
    "status": "deprecated",
    "description": "********* THIS OBJECT IS DEPRECATED ********** This variable indicates the translation offset frequency of the 10BROAD36 MAU in MHz/4; that is, in units of 250 kHz."
  },
  "snmpDot3MauTraps": {
    "name": "snmpDot3MauTraps",
    "oid": "1.3.6.1.2.1.26.0",
    "class": "objectidentity"
  },
  "rpMauJabberTrap": {
    "name": "rpMauJabberTrap",
    "oid": "1.3.6.1.2.1.26.0.1",
    "class": "notificationtype",
    "objects": [
      {
        "module": "MAU-MIB",
        "object": "rpMauJabberState"
      }
    ],
    "status": "current",
    "description": "This trap is sent whenever a managed repeater MAU enters the jabber state. The agent MUST throttle the generation of consecutive rpMauJabberTraps so that there is at least a five-second gap between them.",
    "reference": "[IEEE802.3], 30.5.1.3.1, nJabber notification."
  },
  "ifMauJabberTrap": {
    "name": "ifMauJabberTrap",
    "oid": "1.3.6.1.2.1.26.0.2",
    "class": "notificationtype",
    "objects": [
      {
        "module": "MAU-MIB",
        "object": "ifMauJabberState"
      }
    ],
    "status": "current",
    "description": "This trap is sent whenever a managed interface MAU enters the jabber state. The agent MUST throttle the generation of consecutive ifMauJabberTraps so that there is at least a five-second gap between them.",
    "reference": "[IEEE802.3], 30.5.1.3.1, nJabber notification."
  },
  "mauModConf": {
    "name": "mauModConf",
    "oid": "1.3.6.1.2.1.26.6.1",
    "class": "objectidentity"
  },
  "mauModCompls": {
    "name": "mauModCompls",
    "oid": "1.3.6.1.2.1.26.6.1.1",
    "class": "objectidentity"
  },
  "mauModObjGrps": {
    "name": "mauModObjGrps",
    "oid": "1.3.6.1.2.1.26.6.1.2",
    "class": "objectidentity"
  },
  "mauModNotGrps": {
    "name": "mauModNotGrps",
    "oid": "1.3.6.1.2.1.26.6.1.3",
    "class": "objectidentity"
  },
  "mauRpGrpBasic": {
    "name": "mauRpGrpBasic",
    "oid": "1.3.6.1.2.1.26.6.1.2.1",
    "class": "objectgroup",
    "objects": [
      {
        "module": "MAU-MIB",
        "object": "rpMauGroupIndex"
      },
      {
        "module": "MAU-MIB",
        "object": "rpMauPortIndex"
      },
      {
        "module": "MAU-MIB",
        "object": "rpMauIndex"
      },
      {
        "module": "MAU-MIB",
        "object": "rpMauType"
      },
      {
        "module": "MAU-MIB",
        "object": "rpMauStatus"
      },
      {
        "module": "MAU-MIB",
        "object": "rpMauMediaAvailable"
      },
      {
        "module": "MAU-MIB",
        "object": "rpMauMediaAvailableStateExits"
      },
      {
        "module": "MAU-MIB",
        "object": "rpMauJabberState"
      },
      {
        "module": "MAU-MIB",
        "object": "rpMauJabberingStateEnters"
      }
    ],
    "status": "current",
    "description": "Basic conformance group for MAUs attached to repeater ports. This group is also the conformance specification for RFC 1515 implementations."
  },
  "mauRpGrp100Mbs": {
    "name": "mauRpGrp100Mbs",
    "oid": "1.3.6.1.2.1.26.6.1.2.2",
    "class": "objectgroup",
    "objects": [
      {
        "module": "MAU-MIB",
        "object": "rpMauFalseCarriers"
      }
    ],
    "status": "current",
    "description": "Conformance group for MAUs attached to repeater ports with 100 Mb/s or greater capability."
  },
  "mauRpGrpJack": {
    "name": "mauRpGrpJack",
    "oid": "1.3.6.1.2.1.26.6.1.2.3",
    "class": "objectgroup",
    "objects": [
      {
        "module": "MAU-MIB",
        "object": "rpJackType"
      }
    ],
    "status": "current",
    "description": "Conformance group for MAUs attached to repeater ports with managed jacks."
  },
  "mauIfGrpBasic": {
    "name": "mauIfGrpBasic",
    "oid": "1.3.6.1.2.1.26.6.1.2.4",
    "class": "objectgroup",
    "objects": [
      {
        "module": "MAU-MIB",
        "object": "ifMauIfIndex"
      },
      {
        "module": "MAU-MIB",
        "object": "ifMauIndex"
      },
      {
        "module": "MAU-MIB",
        "object": "ifMauType"
      },
      {
        "module": "MAU-MIB",
        "object": "ifMauStatus"
      },
      {
        "module": "MAU-MIB",
        "object": "ifMauMediaAvailable"
      },
      {
        "module": "MAU-MIB",
        "object": "ifMauMediaAvailableStateExits"
      },
      {
        "module": "MAU-MIB",
        "object": "ifMauJabberState"
      },
      {
        "module": "MAU-MIB",
        "object": "ifMauJabberingStateEnters"
      }
    ],
    "status": "current",
    "description": "Basic conformance group for MAUs attached to interfaces. This group also provides a conformance specification for RFC 1515 implementations."
  },
  "mauIfGrp100Mbs": {
    "name": "mauIfGrp100Mbs",
    "oid": "1.3.6.1.2.1.26.6.1.2.5",
    "class": "objectgroup",
    "objects": [
      {
        "module": "MAU-MIB",
        "object": "ifMauFalseCarriers"
      },
      {
        "module": "MAU-MIB",
        "object": "ifMauTypeList"
      },
      {
        "module": "MAU-MIB",
        "object": "ifMauDefaultType"
      },
      {
        "module": "MAU-MIB",
        "object": "ifMauAutoNegSupported"
      }
    ],
    "status": "deprecated",
    "description": "********* THIS GROUP IS DEPRECATED ********** Conformance group for MAUs attached to interfaces with 100 Mb/s capability. This object group has been deprecated in favor of mauIfGrpHighCapacity."
  },
  "mauIfGrpJack": {
    "name": "mauIfGrpJack",
    "oid": "1.3.6.1.2.1.26.6.1.2.6",
    "class": "objectgroup",
    "objects": [
      {
        "module": "MAU-MIB",
        "object": "ifJackType"
      }
    ],
    "status": "current",
    "description": "Conformance group for MAUs attached to interfaces with managed jacks."
  },
  "mauIfGrpAutoNeg": {
    "name": "mauIfGrpAutoNeg",
    "oid": "1.3.6.1.2.1.26.6.1.2.7",
    "class": "objectgroup",
    "objects": [
      {
        "module": "MAU-MIB",
        "object": "ifMauAutoNegAdminStatus"
      },
      {
        "module": "MAU-MIB",
        "object": "ifMauAutoNegRemoteSignaling"
      },
      {
        "module": "MAU-MIB",
        "object": "ifMauAutoNegConfig"
      },
      {
        "module": "MAU-MIB",
        "object": "ifMauAutoNegCapability"
      },
      {
        "module": "MAU-MIB",
        "object": "ifMauAutoNegCapAdvertised"
      },
      {
        "module": "MAU-MIB",
        "object": "ifMauAutoNegCapReceived"
      },
      {
        "module": "MAU-MIB",
        "object": "ifMauAutoNegRestart"
      }
    ],
    "status": "deprecated",
    "description": "********* THIS GROUP IS DEPRECATED ********** Conformance group for MAUs attached to interfaces with managed auto-negotiation. This object group has been deprecated in favor of mauIfGrpAutoNeg2."
  },
  "mauBroadBasic": {
    "name": "mauBroadBasic",
    "oid": "1.3.6.1.2.1.26.6.1.2.8",
    "class": "objectgroup",
    "objects": [
      {
        "module": "MAU-MIB",
        "object": "broadMauIfIndex"
      },
      {
        "module": "MAU-MIB",
        "object": "broadMauIndex"
      },
      {
        "module": "MAU-MIB",
        "object": "broadMauXmtRcvSplitType"
      },
      {
        "module": "MAU-MIB",
        "object": "broadMauXmtCarrierFreq"
      },
      {
        "module": "MAU-MIB",
        "object": "broadMauTranslationFreq"
      }
    ],
    "status": "deprecated",
    "description": "********* THIS GROUP IS DEPRECATED ********** Conformance group for broadband MAUs attached to interfaces. This object group is deprecated. There have been no reported implementations of this group, and it was felt to be unlikely that there will be any future implementations."
  },
  "mauIfGrpHighCapacity": {
    "name": "mauIfGrpHighCapacity",
    "oid": "1.3.6.1.2.1.26.6.1.2.9",
    "class": "objectgroup",
    "objects": [
      {
        "module": "MAU-MIB",
        "object": "ifMauFalseCarriers"
      },
      {
        "module": "MAU-MIB",
        "object": "ifMauTypeListBits"
      },
      {
        "module": "MAU-MIB",
        "object": "ifMauDefaultType"
      },
      {
        "module": "MAU-MIB",
        "object": "ifMauAutoNegSupported"
      }
    ],
    "status": "current",
    "description": "Conformance group for MAUs attached to interfaces with 100 Mb/s or greater capability."
  },
  "mauIfGrpAutoNeg2": {
    "name": "mauIfGrpAutoNeg2",
    "oid": "1.3.6.1.2.1.26.6.1.2.10",
    "class": "objectgroup",
    "objects": [
      {
        "module": "MAU-MIB",
        "object": "ifMauAutoNegAdminStatus"
      },
      {
        "module": "MAU-MIB",
        "object": "ifMauAutoNegRemoteSignaling"
      },
      {
        "module": "MAU-MIB",
        "object": "ifMauAutoNegConfig"
      },
      {
        "module": "MAU-MIB",
        "object": "ifMauAutoNegCapabilityBits"
      },
      {
        "module": "MAU-MIB",
        "object": "ifMauAutoNegCapAdvertisedBits"
      },
      {
        "module": "MAU-MIB",
        "object": "ifMauAutoNegCapReceivedBits"
      },
      {
        "module": "MAU-MIB",
        "object": "ifMauAutoNegRestart"
      }
    ],
    "status": "current",
    "description": "Conformance group for MAUs attached to interfaces with managed auto-negotiation."
  },
  "mauIfGrpAutoNeg1000Mbps": {
    "name": "mauIfGrpAutoNeg1000Mbps",
    "oid": "1.3.6.1.2.1.26.6.1.2.11",
    "class": "objectgroup",
    "objects": [
      {
        "module": "MAU-MIB",
        "object": "ifMauAutoNegRemoteFaultAdvertised"
      },
      {
        "module": "MAU-MIB",
        "object": "ifMauAutoNegRemoteFaultReceived"
      }
    ],
    "status": "current",
    "description": "Conformance group for 1000Mbps MAUs attached to interfaces with managed auto-negotiation."
  },
  "mauIfGrpHCStats": {
    "name": "mauIfGrpHCStats",
    "oid": "1.3.6.1.2.1.26.6.1.2.12",
    "class": "objectgroup",
    "objects": [
      {
        "module": "MAU-MIB",
        "object": "ifMauHCFalseCarriers"
      }
    ],
    "status": "current",
    "description": "Conformance for high capacity statistics for MAUs attached to interfaces."
  },
  "rpMauNotifications": {
    "name": "rpMauNotifications",
    "oid": "1.3.6.1.2.1.26.6.1.3.1",
    "class": "notificationgroup",
    "objects": [
      {
        "module": "MAU-MIB",
        "object": "rpMauJabberTrap"
      }
    ],
    "status": "current",
    "description": "Notifications for repeater MAUs."
  },
  "ifMauNotifications": {
    "name": "ifMauNotifications",
    "oid": "1.3.6.1.2.1.26.6.1.3.2",
    "class": "notificationgroup",
    "objects": [
      {
        "module": "MAU-MIB",
        "object": "ifMauJabberTrap"
      }
    ],
    "status": "current",
    "description": "Notifications for interface MAUs."
  },
  "mauModRpCompl": {
    "name": "mauModRpCompl",
    "oid": "1.3.6.1.2.1.26.6.1.1.1",
    "class": "modulecompliance",
    "modulecompliance": [
      {
        "object": "mauRpGrpBasic",
        "module": "MAU-MIB"
      },
      {
        "object": "mauRpGrp100Mbs",
        "module": "MAU-MIB"
      },
      {
        "object": "mauRpGrpJack",
        "module": "MAU-MIB"
      },
      {
        "object": "rpMauNotifications",
        "module": "MAU-MIB"
      }
    ],
    "status": "deprecated",
    "description": "******** THIS COMPLIANCE IS DEPRECATED ******** Compliance for MAUs attached to repeater ports. This compliance is deprecated and replaced by mauModRpCompl2, which corrects an oversight by allowing rpMauStatus to be implemented read-only."
  },
  "mauModIfCompl": {
    "name": "mauModIfCompl",
    "oid": "1.3.6.1.2.1.26.6.1.1.2",
    "class": "modulecompliance",
    "modulecompliance": [
      {
        "object": "mauIfGrpBasic",
        "module": "MAU-MIB"
      },
      {
        "object": "mauIfGrp100Mbs",
        "module": "MAU-MIB"
      },
      {
        "object": "mauIfGrpJack",
        "module": "MAU-MIB"
      },
      {
        "object": "mauIfGrpAutoNeg",
        "module": "MAU-MIB"
      },
      {
        "object": "mauBroadBasic",
        "module": "MAU-MIB"
      },
      {
        "object": "ifMauNotifications",
        "module": "MAU-MIB"
      }
    ],
    "status": "deprecated",
    "description": "******** THIS COMPLIANCE IS DEPRECATED ******** Compliance for MAUs attached to interfaces. This compliance is deprecated and replaced by mauModIfCompl2."
  },
  "mauModIfCompl2": {
    "name": "mauModIfCompl2",
    "oid": "1.3.6.1.2.1.26.6.1.1.3",
    "class": "modulecompliance",
    "modulecompliance": [
      {
        "object": "mauIfGrpBasic",
        "module": "MAU-MIB"
      },
      {
        "object": "mauIfGrpHighCapacity",
        "module": "MAU-MIB"
      },
      {
        "object": "mauIfGrpJack",
        "module": "MAU-MIB"
      },
      {
        "object": "mauIfGrpAutoNeg2",
        "module": "MAU-MIB"
      },
      {
        "object": "mauIfGrpAutoNeg1000Mbps",
        "module": "MAU-MIB"
      },
      {
        "object": "ifMauNotifications",
        "module": "MAU-MIB"
      }
    ],
    "status": "deprecated",
    "description": "******** THIS COMPLIANCE IS DEPRECATED ******** Compliance for MAUs attached to interfaces. This compliance is deprecated and replaced by mauModIfCompl3."
  },
  "mauModRpCompl2": {
    "name": "mauModRpCompl2",
    "oid": "1.3.6.1.2.1.26.6.1.1.4",
    "class": "modulecompliance",
    "modulecompliance": [
      {
        "object": "mauRpGrpBasic",
        "module": "MAU-MIB"
      },
      {
        "object": "mauRpGrp100Mbs",
        "module": "MAU-MIB"
      },
      {
        "object": "mauRpGrpJack",
        "module": "MAU-MIB"
      },
      {
        "object": "rpMauNotifications",
        "module": "MAU-MIB"
      }
    ],
    "status": "current",
    "description": "Compliance for MAUs attached to repeater ports. Note that compliance with this compliance statement requires compliance with the snmpRptrModCompl MODULE-COMPLIANCE statement of the SNMP-REPEATER-MIB (RFC 2108)."
  },
  "mauModIfCompl3": {
    "name": "mauModIfCompl3",
    "oid": "1.3.6.1.2.1.26.6.1.1.5",
    "class": "modulecompliance",
    "modulecompliance": [
      {
        "object": "mauIfGrpBasic",
        "module": "MAU-MIB"
      },
      {
        "object": "mauIfGrpHighCapacity",
        "module": "MAU-MIB"
      },
      {
        "object": "mauIfGrpHCStats",
        "module": "MAU-MIB"
      },
      {
        "object": "mauIfGrpJack",
        "module": "MAU-MIB"
      },
      {
        "object": "mauIfGrpAutoNeg2",
        "module": "MAU-MIB"
      },
      {
        "object": "mauIfGrpAutoNeg1000Mbps",
        "module": "MAU-MIB"
      },
      {
        "object": "ifMauNotifications",
        "module": "MAU-MIB"
      }
    ],
    "status": "current",
    "description": "Compliance for MAUs attached to interfaces. Note that compliance with this compliance statement requires compliance with the ifCompliance3 MODULE-COMPLIANCE statement of the IF-MIB (RFC 2863) and the dot3Compliance2 MODULE-COMPLIANCE statement of the EtherLike-MIB (RFC3635)."
  },
  "meta": {
    "comments": [
      "ASN.1 source file:///Users/neermitt/kusanagi/mibs.snmplabs.com/asn1/MAU-MIB",
      "Produced by pysmi-0.3.4 at Fri May 24 17:10:42 2019",
      "On host NEERMITT-M-J0NV platform Darwin version 18.6.0 by user neermitt",
      "Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) "
    ],
    "module": "MAU-MIB"
  }
}