{
  "imports": {
    "class": "imports",
    "DLINK-ID-REC-MIB": [
      "dlink-common-mgmt"
    ],
    "SNMP-FRAMEWORK-MIB": [
      "SnmpAdminString"
    ],
    "SNMPv2-CONF": [
      "OBJECT-GROUP",
      "MODULE-COMPLIANCE",
      "NOTIFICATION-GROUP"
    ],
    "SNMPv2-SMI": [
      "Counter32",
      "Integer32",
      "Counter64",
      "Unsigned32",
      "OBJECT-TYPE",
      "MibIdentifier",
      "Gauge32",
      "OBJECT-IDENTITY",
      "IpAddress",
      "iso",
      "TimeTicks",
      "enterprises",
      "NOTIFICATION-TYPE",
      "Bits",
      "MODULE-IDENTITY"
    ],
    "SNMPv2-TC": [
      "RowStatus",
      "DisplayString",
      "TEXTUAL-CONVENTION"
    ]
  },
  "sFlowMIB": {
    "name": "sFlowMIB",
    "oid": "1.3.6.1.4.1.171.12.36",
    "class": "moduleidentity",
    "lastupdated": "0810300000Z",
    "organization": "D-Link Corp.",
    "contactinfo": "http://support.dlink.com",
    "description": "The Structure of sFlow for the proprietary enterprise."
  },
  "sFlowAgent": {
    "name": "sFlowAgent",
    "oid": "1.3.6.1.4.1.171.12.36.1",
    "class": "objectidentity"
  },
  "SFlowDataSource": {
    "name": "SFlowDataSource",
    "class": "textualconvention",
    "type": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 65535
          }
        ]
      }
    },
    "status": "current",
    "description": "Identifies a source of sFlow data. The following data source types are currently defined: - ifIndex.<I> SFlowDataSources of this traditional form are called 'port-based'. Ideally the sampling entity will perform sampling on all flows originating from or destined to the specified interface. However, if the switch architecture only allows input or output sampling then the sampling agent is permitted to only sample input flows input or output flows. Each packet must only be considered once for sampling, irrespective of the number of ports it will be forwarded to. Note: Port 0 is used to indicate that all ports on the device are represented by a single data source. - sFlowFsPacketSamplingRate applies to all ports on the device capable of packet sampling. - smonVlanDataSource.<V> An SFlowDataSource of this form refers to a 'Packet-based VLAN' and is called a 'VLAN-based' dataSource. <V> is the VLAN ID as defined by the IEEE 802.1Q standard. The value is between 1 and 4094 inclusive, and it represents an 802.1Q VLAN-ID with global scope within a given bridged domain. Sampling is performed on all packets received that are part of the specified VLAN (no matter which port they arrived on). Each packet will only be considered once for sampling, irrespective of the number of ports it will be forwarded to. - entPhysicalEntry.<N> An SFlowDataSource of this form refers to a physical entity within the agent (e.g. entPhysicalClass = backplane(4)) and is called an 'entity-based' dataSource. Sampling is performed on all packets entering the resource (e.g. If the backplane is being sampled, all packets transmitted onto the backplane will be considered as single candidates for sampling irrespective of the number of ports they ultimately reach). Note: Since each SFlowDataSource operates independently a packet that crosses multiple DataSources may generate multiple flow records."
  },
  "SFlowReceiver": {
    "name": "SFlowReceiver",
    "class": "textualconvention",
    "type": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 4
          }
        ]
      }
    },
    "status": "current",
    "description": "Identify the sFlow receiver associated with this resource. A value of zero indicates that this resource is available. If non-zero, the value must correspond to a valid, active sFlowRcvrIndex. If the value is currently zero, it may be set to any active entry in the sFlowRcvrTable. If the value is not zero, then set to anything other than zero or its current value will result in an SNMP error (bad value). Setting to zero frees the resource and returns all the values in this entry to their default values. If an entry in the sFlowRcvrTable expires, either because the sFlowRcvrOwner is set to the empty string or because the sFlowRcvrTimeout reaches zero, then the agent must mark all associated resources as available (by setting the associated SFlowReceiver entry to zero) and all values in these records must be restored to their default values. This mechanism provides no enforcement and relies on the cooperation of management entities in order to ensure that competition for a resource is fairly resolved. A management entity should not make any changes to a resource without first acquiring it by successfully writing its sFlowRcvrIndex value as the SFlowReceiver for the resource."
  },
  "sFlowVersion": {
    "name": "sFlowVersion",
    "oid": "1.3.6.1.4.1.171.12.36.1.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "SnmpAdminString",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "1.00",
        "format": "string"
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This indicates the sFlow version"
  },
  "sFlowAgentAddress": {
    "name": "sFlowAgentAddress",
    "oid": "1.3.6.1.4.1.171.12.36.1.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The IP address associated with this agent."
  },
  "sFlowAgentState": {
    "name": "sFlowAgentState",
    "oid": "1.3.6.1.4.1.171.12.36.1.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object can enable or disable sFlow."
  },
  "sFlowRcvrTable": {
    "name": "sFlowRcvrTable",
    "oid": "1.3.6.1.4.1.171.12.36.1.4",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A table of the receivers of sFlow information."
  },
  "sFlowRcvrEntry": {
    "name": "sFlowRcvrEntry",
    "oid": "1.3.6.1.4.1.171.12.36.1.4.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "SFLOW-MIB",
        "object": "sFlowRcvrIndex",
        "implied": 0
      },
      {
        "module": "SFLOW-MIB",
        "object": "sFlowRcvrOwner",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "Attributes of an sFlow Receiver."
  },
  "sFlowRcvrIndex": {
    "name": "sFlowRcvrIndex",
    "oid": "1.3.6.1.4.1.171.12.36.1.4.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 4
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Index into sFlowReceiverTable."
  },
  "sFlowRcvrOwner": {
    "name": "sFlowRcvrOwner",
    "oid": "1.3.6.1.4.1.171.12.36.1.4.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 1,
            "max": 16
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "The entity making use of this sFlowRcvrTable entry. The empty string indicates that the entry is currently unclaimed. An entity wishing to claim an sFlowRcvrTable entry must ensure that the entry is unclaimed before trying to claim it. The entry is claimed by setting the owner string. The entry must be claimed before any changes can be made to other sampler objects. In order to avoid a race condition, the entity taking control of the sampler should set both the owner and a value for sFlowRcvrTimeout in the same SNMP set request. This mechanism provides no enforcement and relies on the cooperation of management entities in order to ensure that competition for a receiver entry is fairly resolved."
  },
  "sFlowRcvrTimeout": {
    "name": "sFlowRcvrTimeout",
    "oid": "1.3.6.1.4.1.171.12.36.1.4.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 2000000
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The time (in seconds) remaining before the sampler is released and stops sampling. When set, the owner establishes control for the specified period. When read, the remaining time in the interval is returned. A management entity wanting to maintain control of the sampler is responsible for setting a new value before the old one expires. When the interval expires, the agent is responsible for restoring all other entities in this row to their default values. It must also free all other resources associated with this sFlowRcvrTable entry. The value 0 indicate it is never time out. "
  },
  "sFlowRcvrMaximumDatagramSize": {
    "name": "sFlowRcvrMaximumDatagramSize",
    "oid": "1.3.6.1.4.1.171.12.36.1.4.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 300,
            "max": 1400
          }
        ]
      }
    },
    "default": {
      "default": {
        "value": 1400,
        "format": "decimal"
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The maximum number of data bytes that can be sent in a single sample datagram. The manager should set this value to avoid fragmentation of the sFlow datagrams."
  },
  "sFlowRcvrAddress": {
    "name": "sFlowRcvrAddress",
    "oid": "1.3.6.1.4.1.171.12.36.1.4.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "00000000",
        "format": "hex"
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The IP address of the sFlow collector. If set to 0.0.0.0, no sFlow datagrams will be sent."
  },
  "sFlowRcvrPort": {
    "name": "sFlowRcvrPort",
    "oid": "1.3.6.1.4.1.171.12.36.1.4.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 65535
          }
        ]
      }
    },
    "default": {
      "default": {
        "value": 6343,
        "format": "decimal"
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The destination port for sFlow datagrams."
  },
  "sFlowRcvrRowStatus": {
    "name": "sFlowRcvrRowStatus",
    "oid": "1.3.6.1.4.1.171.12.36.1.4.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "RowStatus",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "This object indicates the status of this entry."
  },
  "sFlowFsTable": {
    "name": "sFlowFsTable",
    "oid": "1.3.6.1.4.1.171.12.36.1.5",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A table of the flow samplers within a device."
  },
  "sFlowFsEntry": {
    "name": "sFlowFsEntry",
    "oid": "1.3.6.1.4.1.171.12.36.1.5.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "SFLOW-MIB",
        "object": "sFlowFsDataSource",
        "implied": 0
      },
      {
        "module": "SFLOW-MIB",
        "object": "sFlowFsReceiver",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "Attributes of a flow sampler."
  },
  "sFlowFsDataSource": {
    "name": "sFlowFsDataSource",
    "oid": "1.3.6.1.4.1.171.12.36.1.5.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SFlowDataSource",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "sFlowDataSource for this flow sampler."
  },
  "sFlowFsReceiver": {
    "name": "sFlowFsReceiver",
    "oid": "1.3.6.1.4.1.171.12.36.1.5.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SFlowReceiver",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "The SFlowReceiver for this flow sampler."
  },
  "sFlowFsPacketSamplingRate": {
    "name": "sFlowFsPacketSamplingRate",
    "oid": "1.3.6.1.4.1.171.12.36.1.5.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The statistical sampling rate for packet sampling from this source. Set to N to sample 1/Nth of the packets in the monitored flows. An agent should choose its own algorithm to introduce variance into the sampling so that exactly every Nth packet is not counted. A sampling rate of 1 counts all packets. A sampling rate of 0 disables sampling. The agent is permitted to have minimum and maximum allowable values for the sampling rate. A minimum rate lets the agent designer set an upper bound on the overhead associated with sampling, and a maximum rate may be the result of hardware restrictions (such as counter size). In addition not all values between the maximum and minimum may be realizable as the sampling rate (again because of implementation considerations). When the sampling rate is set the agent is free to adjust the value so that it lies between the maximum and minimum values and has the closest achievable value. When read, the agent must return the actual sampling rate it will be using (after the adjustments previously described). The sampling algorithm must converge so that over time the number of packets sampled approaches 1/Nth of the total number of packets in the monitored flows."
  },
  "sFlowFsMaximumHeaderSize": {
    "name": "sFlowFsMaximumHeaderSize",
    "oid": "1.3.6.1.4.1.171.12.36.1.5.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 18,
            "max": 256
          }
        ]
      }
    },
    "default": {
      "default": {
        "value": 128,
        "format": "decimal"
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The maximum number of bytes that should be copied from a sampled packet. The agent may have an internal maximum and minimum permissible sizes. If an attempt is made to set this value outside the permissible range then the agent should adjust the value to the closest permissible value."
  },
  "sFlowFsRowStatus": {
    "name": "sFlowFsRowStatus",
    "oid": "1.3.6.1.4.1.171.12.36.1.5.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "RowStatus",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "This object indicates the status of this entry."
  },
  "sFlowCpTable": {
    "name": "sFlowCpTable",
    "oid": "1.3.6.1.4.1.171.12.36.1.6",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A table of the counter pollers within a device."
  },
  "sFlowCpEntry": {
    "name": "sFlowCpEntry",
    "oid": "1.3.6.1.4.1.171.12.36.1.6.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "SFLOW-MIB",
        "object": "sFlowCpDataSource",
        "implied": 0
      },
      {
        "module": "SFLOW-MIB",
        "object": "sFlowCpReceiver",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "Attributes of a counter poller."
  },
  "sFlowCpDataSource": {
    "name": "sFlowCpDataSource",
    "oid": "1.3.6.1.4.1.171.12.36.1.6.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SFlowDataSource",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Identifies the source of the data for the counter poller."
  },
  "sFlowCpReceiver": {
    "name": "sFlowCpReceiver",
    "oid": "1.3.6.1.4.1.171.12.36.1.6.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SFlowReceiver",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "The SFlowReciever associated with this counter poller."
  },
  "sFlowCpInterval": {
    "name": "sFlowCpInterval",
    "oid": "1.3.6.1.4.1.171.12.36.1.6.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 120
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The maximum number of seconds between successive samples of the counters associated with this data source. A sampling interval of 0 disables counter sampling. The agent is permitted to have minimum and maximum allowable values for the counter polling interval. A minimum interval lets the agent designer set an upper bound on the overhead associated with polling, and a maximum interval may be the result of implementation restrictions (such as counter size). In addition not all values between the maximum and minimum may be realizable as the sampling interval (again because of implementation considerations). The minimum sampling interval is 20, the maximum sampling interval is 120. "
  },
  "sFlowCpRowStatus": {
    "name": "sFlowCpRowStatus",
    "oid": "1.3.6.1.4.1.171.12.36.1.6.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "RowStatus",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "This object indicates the status of this entry."
  },
  "meta": {
    "comments": [
      "ASN.1 source file:///Users/neermitt/kusanagi/mibs.snmplabs.com/asn1/SFLOW-MIB",
      "Produced by pysmi-0.3.4 at Fri May 24 15:03:18 2019",
      "On host NEERMITT-M-J0NV platform Darwin version 18.6.0 by user neermitt",
      "Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) "
    ],
    "module": "SFLOW-MIB"
  }
}